[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/bin/cli.js",
    "content": "import Path from 'path'\nimport IconGen from '../lib/index.js'\n\n/**\n * Text of help.\n * @type {String}\n */\nconst HELP_TEXT = `\nUsage: icon-gen [OPTIONS]\n\nGenerate an icon from the SVG or PNG file.\nIf '--ico', '--icns', '--favicon' is not specified, everything is output in the standard setting.\n\nOptions:\n-h, --help    Display this text.\n-v, --version Display the version number.\n-i, --input   Path of the SVG file or PNG file directory.\n-o, --output  Path of the output directory.\n-r, --report  Display the process reports.\n              Default is disable.\n--ico         Output ICO file with the specified 'name' and 'sizes'.\n              ex. --ico name=foo sizes=16,32,128\n--icns        Output ICO file with the specified 'name' and 'sizes'.\n              ex. --icns name=bar sizes=32,1024\n--favicon     Output Favicon files with the specified 'ico', 'name' and 'sizes'.\n              'ico' is the size of the ICO file.\n              'name' is the prefix of the PNG file. Start with the alphabet, can use '-' and '_'.\n              'sizes' is the size of the PNG file.\n              ex. '--favicon ico=16,32 name=favicon- sizes=16,32,128'\n\nExamples:\n$ icon-gen -i sample.svg -o ./dist -r\n$ icon-gen -i ./images -o ./dist -r\n$ icon-gen -i sample.svg -o ./dist --ico --icns\n$ icon-gen -i sample.svg -o ./dist --ico --favicon ico=16,32 name=favicon- sizes=16,32,128\n\nSee also:\nhttps://github.com/akabekobeko/npm-icon-gen\n`\n\n/**\n * CLI parameters.\n * @type {Object}\n */\nconst CLI_PARAMS = {\n  help: { name: '--help', shortName: '-h' },\n  version: { name: '--version', shortName: '-v' },\n  input: { name: '--input', shortName: '-i' },\n  output: { name: '--output', shortName: '-o' },\n  report: { name: '--report', shortName: '-r' },\n  ico: { name: '--ico' },\n  icns: { name: '--icns' },\n  favicon: { name: '--favicon' }\n}\n\n/**\n * Parse an option of argument.\n * @param {String} arg Option of argument. Format is \"value\" of \"name=value\".\n * @returns {String|Object} Parsed option.\n */\nconst parseArgOption = (arg) => {\n  const units = arg.split('=')\n  if (1 < units.length) {\n    return { name: units[0], value: units[1] }\n  } else {\n    return arg\n  }\n}\n\n/**\n * Parse an arguments of command line.\n * @param {String[]} argv Arguments of command line.\n * @returns {Object[]} Paesed parameters.\n */\nconst parseArgv = (argv) => {\n  const results = []\n  let param = { name: '', options: [] }\n  argv.forEach((arg) => {\n    if (arg.startsWith('-')) {\n      param = { name: arg, options: [] }\n      results.push(param)\n    } else {\n      param.options.push(parseArgOption(arg))\n    }\n  })\n\n  return results\n}\n\n/**\n * Parse the options of the image.\n * @param {Object} options Parsed options from parseArgOption function.\n * @returns {Object} Options.\n */\nconst parseImageOption = (options) => {\n  const result = {}\n  options.forEach((option) => {\n    switch (option.name) {\n      case 'name':\n        result.name = option.value\n        break\n\n      case 'sizes':\n        result.sizes = option.value.split(',').map((n) => Number(n))\n        break\n\n      // Favicon only\n      case 'ico':\n        result.ico = option.value.split(',').map((n) => Number(n))\n        break\n\n      default:\n        break\n    }\n  })\n\n  return result\n}\n\nconst parse = (argv) => {\n  if (!(argv && 0 < argv.length)) {\n    return { help: true }\n  }\n\n  switch (argv[0]) {\n    case CLI_PARAMS.help.name:\n    case CLI_PARAMS.help.shortName:\n      return { help: true }\n\n    case CLI_PARAMS.version.name:\n    case CLI_PARAMS.version.shortName:\n      return { version: true }\n\n    default:\n      break\n  }\n\n  const options = {}\n  parseArgv(argv).forEach((arg) => {\n    switch (arg.name) {\n      case CLI_PARAMS.input.name:\n      case CLI_PARAMS.input.shortName:\n        options.input = arg.options.length === 0 ? '' : Path.resolve(arg.options[0])\n        break\n\n      case CLI_PARAMS.output.name:\n      case CLI_PARAMS.output.shortName:\n        options.output = arg.options.length === 0 ? '' : Path.resolve(arg.options[0])\n        break\n\n      case CLI_PARAMS.report.name:\n      case CLI_PARAMS.report.shortName:\n        options.report = true\n        break\n\n      case CLI_PARAMS.ico.name:\n        options.ico = parseImageOption(arg.options)\n        break\n\n      case CLI_PARAMS.icns.name:\n        options.icns = parseImageOption(arg.options)\n        break\n\n      case CLI_PARAMS.favicon.name:\n        options.favicon = parseImageOption(arg.options)\n        break\n\n      default:\n        break\n    }\n  })\n\n  // Generate all if all images are omitted\n  if (!options.ico && !options.icns && !options.favicon) {\n    options.ico = {}\n    options.icns = {}\n    options.favicon = {}\n  }\n\n  return options\n}\n\n/**\n * Show the help text.\n * @param {WritableStream} stream Target stream.\n * @return {Promise} Asynchronous task..\n */\nconst printHelp = (stream) => {\n  return new Promise((resolve) => {\n    stream.write(HELP_TEXT)\n    resolve()\n  })\n}\n\n/**\n * Show the version number.\n * @param {WritableStream} stream Target stream.\n * @return {Promise} Asynchronous task..\n */\nconst printVersion = (stream) => {\n  return new Promise((resolve) => {\n    const read = (path) => {\n      try {\n        return require(path).version\n      } catch (err) {\n        return null\n      }\n    }\n\n    const version = read('../package.json') || read('../../package.json')\n    stream.write('v' + version + '\\n')\n\n    resolve()\n  })\n}\n\n/**\n * Entry point of the CLI.\n * @param {String[]} argv Arguments of the command line.\n * @param {WritableStream} stdout Standard output.\n * @return {Promise} Asynchronous task.\n */\nconst CLI = (argv, stdout) => {\n  return new Promise((resolve, reject) => {\n    const options = parse(argv)\n    if (options.help) {\n      printHelp(stdout)\n      return resolve()\n    }\n\n    if (options.version) {\n      printVersion(stdout)\n      return resolve()\n    }\n\n    if (!options.input) {\n      return reject(new Error('\"-i\" or \"--input\" has not been specified. This parameter is required.'))\n    }\n\n    if (!options.output) {\n      return reject(new Error('\"-o\" or \"--output\" has not been specified. This parameter is required.'))\n    }\n\n    return IconGen(options.input, options.output, options)\n  })\n}\n\nexport default CLI\n",
    "static": true,
    "longname": "/Users/akabeko/Documents/dev/node/icon-gen/src/bin/cli.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "variable",
    "name": "HELP_TEXT",
    "memberof": "src/bin/cli.js",
    "static": true,
    "longname": "src/bin/cli.js~HELP_TEXT",
    "access": "public",
    "export": false,
    "importPath": "icon-gen/src/bin/cli.js",
    "importStyle": null,
    "description": "Text of help.",
    "lineNumber": 8,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 50,
    "kind": "variable",
    "name": "CLI_PARAMS",
    "memberof": "src/bin/cli.js",
    "static": true,
    "longname": "src/bin/cli.js~CLI_PARAMS",
    "access": "public",
    "export": false,
    "importPath": "icon-gen/src/bin/cli.js",
    "importStyle": null,
    "description": "CLI parameters.",
    "lineNumber": 45,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 51,
    "kind": "function",
    "name": "parseArgOption",
    "memberof": "src/bin/cli.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/bin/cli.js~parseArgOption",
    "access": "public",
    "export": false,
    "importPath": "icon-gen/src/bin/cli.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 61,
    "undocument": true,
    "params": [
      {
        "name": "arg",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 52,
    "kind": "function",
    "name": "parseArgv",
    "memberof": "src/bin/cli.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/bin/cli.js~parseArgv",
    "access": "public",
    "export": false,
    "importPath": "icon-gen/src/bin/cli.js",
    "importStyle": null,
    "description": "Parse an arguments of command line.",
    "lineNumber": 75,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object[]} Paesed parameters."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": false,
        "name": "argv",
        "description": "Arguments of command line."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object[]"
      ],
      "spread": false,
      "description": "Paesed parameters."
    },
    "ignore": true
  },
  {
    "__docId__": 53,
    "kind": "function",
    "name": "parseImageOption",
    "memberof": "src/bin/cli.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/bin/cli.js~parseImageOption",
    "access": "public",
    "export": false,
    "importPath": "icon-gen/src/bin/cli.js",
    "importStyle": null,
    "description": "Parse the options of the image.",
    "lineNumber": 95,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object} Options."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Parsed options from parseArgOption function."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "Options."
    },
    "ignore": true
  },
  {
    "__docId__": 54,
    "kind": "function",
    "name": "parse",
    "memberof": "src/bin/cli.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/bin/cli.js~parse",
    "access": "public",
    "export": false,
    "importPath": "icon-gen/src/bin/cli.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 120,
    "undocument": true,
    "params": [
      {
        "name": "argv",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 55,
    "kind": "function",
    "name": "printHelp",
    "memberof": "src/bin/cli.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/bin/cli.js~printHelp",
    "access": "public",
    "export": false,
    "importPath": "icon-gen/src/bin/cli.js",
    "importStyle": null,
    "description": "Show the help text.",
    "lineNumber": 188,
    "params": [
      {
        "nullable": null,
        "types": [
          "WritableStream"
        ],
        "spread": false,
        "optional": false,
        "name": "stream",
        "description": "Target stream."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Asynchronous task.."
    },
    "ignore": true
  },
  {
    "__docId__": 56,
    "kind": "function",
    "name": "printVersion",
    "memberof": "src/bin/cli.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/bin/cli.js~printVersion",
    "access": "public",
    "export": false,
    "importPath": "icon-gen/src/bin/cli.js",
    "importStyle": null,
    "description": "Show the version number.",
    "lineNumber": 200,
    "params": [
      {
        "nullable": null,
        "types": [
          "WritableStream"
        ],
        "spread": false,
        "optional": false,
        "name": "stream",
        "description": "Target stream."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Asynchronous task.."
    },
    "ignore": true
  },
  {
    "__docId__": 57,
    "kind": "function",
    "name": "CLI",
    "memberof": "src/bin/cli.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/bin/cli.js~CLI",
    "access": "public",
    "export": true,
    "importPath": "icon-gen/src/bin/cli.js",
    "importStyle": "CLI",
    "description": "Entry point of the CLI.",
    "lineNumber": 223,
    "params": [
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": false,
        "name": "argv",
        "description": "Arguments of the command line."
      },
      {
        "nullable": null,
        "types": [
          "WritableStream"
        ],
        "spread": false,
        "optional": false,
        "name": "stdout",
        "description": "Standard output."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Asynchronous task."
    }
  },
  {
    "__docId__": 58,
    "kind": "file",
    "name": "src/bin/index.js",
    "content": "#!/usr/bin/env node\n\nimport CLI from './cli.js'\n\nCLI(process.argv.slice(2), process.stdout).catch((err) => {\n  console.error(err)\n})\n",
    "static": true,
    "longname": "/Users/akabeko/Documents/dev/node/icon-gen/src/bin/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 59,
    "kind": "file",
    "name": "src/lib/favicon-generator.js",
    "content": "import Fs from 'fs'\nimport Path from 'path'\nimport Util from './util.js'\nimport GenerateICO from './ico-generator.js'\n\n/**\n * Sizes required for the PNG files.\n * @type {Number[]}\n */\nconst REQUIRED_PNG_IMAGE_SIZES = [32, 57, 72, 96, 120, 128, 144, 152, 195, 228]\n\n/**\n * Sizes required for ICO file.\n * @type {Number[]}\n */\nconst REQUIRED_ICO_IMAGE_SIZES = [16, 24, 32, 48, 64]\n\n/**\n * Sizes required for Favicon files.\n * @type {Number[]}\n */\nconst REQUIRED_IMAGE_SIZES = REQUIRED_PNG_IMAGE_SIZES.concat(REQUIRED_ICO_IMAGE_SIZES)\n  .filter((a, i, self) => self.indexOf(a) === i)\n  .sort((a, b) => a - b)\n\n/**\n * File name of Favicon file.\n * @type {String}\n */\nconst ICO_FILE_NAME = 'favicon'\n\n/**\n * Prefix of PNG file names.\n * @type {String}\n */\nconst PNG_FILE_NAME_PREFIX = 'favicon-'\n\n/**\n * Copy to image.\n * @param {ImageInfo} image Image information.\n * @param {String} dir Output destination The path of directory.\n * @param {String} prefix Prefix of an output PNG files. Start with the alphabet, can use `-` and `_`. This option is for PNG. The name of the ICO file is always `favicon.ico`.\n * @param {Logger} logger Logger.\n * @return {Promise} Task to copy an image.\n */\nconst copyImage = (image, dir, prefix, logger) => {\n  return new Promise((resolve, reject) => {\n    const reader = Fs.createReadStream(image.path).on('error', (err) => {\n      reject(err)\n    })\n\n    const dest = Path.join(dir, `${prefix}${image.size}.png`)\n    const writer = Fs.createWriteStream(dest)\n      .on('error', (err) => {\n        reject(err)\n      })\n      .on('close', () => {\n        logger.log('  Create: ' + dest)\n        resolve(dest)\n      })\n\n    reader.pipe(writer)\n  })\n}\n\n/**\n * Generate the FAVICON PNG file from the PNG images.\n * @param {ImageInfo[]} images File information for the PNG files generation.\n * @param {String} dir Output destination the path of directory.\n * @param {String} prefix Prefix of an output PNG files. Start with the alphabet, can use `-` and `_`. This option is for PNG. The name of the ICO file is always `favicon.ico`.\n * @param {Number[]} sizes Size structure of PNG files to output.\n * @param {Logger} logger Logger.\n * @return {Promise} Promise object.\n */\nconst generatePNG = (images, dir, prefix, sizes, logger) => {\n  return new Promise((resolve, reject) => {\n    logger.log('Favicon:')\n\n    // PNG\n    const tasks = Util.filterImagesBySizes(images, sizes).map((image) => {\n      return copyImage(image, dir, prefix, logger)\n    })\n\n    Promise.all(tasks)\n      .then((results) => {\n        resolve(results)\n      })\n      .catch((err) => {\n        reject(err)\n      })\n  })\n}\n\n/**\n * Generate the FAVICON file from the PNG images.\n * @param {ImageInfo[]} images File information for the PNG files generation.\n * @param {String} dir Output destination the path of directory.\n * @param {Number[]} sizes Structure of an image sizes for ICO.\n * @param {Logger} logger Logger.\n * @return {Promise} Promise object.\n */\nconst generateICO = (images, dir, sizes, logger) => {\n  const options = { name: ICO_FILE_NAME, sizes: sizes }\n  return GenerateICO(Util.filterImagesBySizes(images, sizes), dir, options, logger)\n}\n\n/**\n * Check an option properties.\n * @param {Object} options Options.\n * @param {String} options.name Prefix of an output PNG files. Start with the alphabet, can use `-` and `_`. This option is for PNG. The name of the ICO file is always `favicon.ico`.\n * @param {Number[]} options.sizes Size structure of PNG files to output.\n * @param {Number[]} options.ico Structure of an image sizes for ICO.\n * @returns {Object} Checked options.\n */\nconst checkOptions = (options) => {\n  if (options) {\n    return {\n      name: typeof options.name === 'string' ? options.name : PNG_FILE_NAME_PREFIX,\n      sizes: Array.isArray(options.sizes) ? options.sizes : REQUIRED_PNG_IMAGE_SIZES,\n      ico: Array.isArray(options.ico) ? options.ico : REQUIRED_ICO_IMAGE_SIZES\n    }\n  } else {\n    return {\n      name: PNG_FILE_NAME_PREFIX,\n      sizes: REQUIRED_PNG_IMAGE_SIZES,\n      ico: REQUIRED_ICO_IMAGE_SIZES\n    }\n  }\n}\n\n/**\n * Get the size of the required PNG.\n * @return {Number[]} Sizes.\n */\nexport const GetRequiredFavoriteImageSizes = () => {\n  return REQUIRED_IMAGE_SIZES\n}\n\n/**\n * Generate a FAVICON image files (ICO and PNG) from the PNG images.\n * @param {ImageInfo[]} images File information for the PNG files generation.\n * @param {String} dir Output destination the path of directory.\n * @param {Object} options Options.\n * @param {String} options.name Prefix of an output PNG files. Start with the alphabet, can use `-` and `_`. This option is for PNG. The name of the ICO file is always `favicon.ico`.\n * @param {Number[]} options.sizes Size structure of PNG files to output.\n * @param {Number[]} options.ico Structure of an image sizes for ICO.\n * @param {Logger} logger Logger.\n * @return {Promise} Promise object.\n */\nconst GenerateFavicon = (images, dir, options, logger) => {\n  const opt = checkOptions(options)\n  const results = []\n  return Promise.resolve()\n    .then(() => {\n      return generateICO(images, dir, opt.ico, logger)\n    })\n    .then((icoFile) => {\n      results.push(icoFile)\n      return generatePNG(images, dir, opt.name, opt.sizes, logger)\n    })\n    .then((pngFiles) => {\n      return results.concat(pngFiles)\n    })\n}\n\nexport default GenerateFavicon\n",
    "static": true,
    "longname": "/Users/akabeko/Documents/dev/node/icon-gen/src/lib/favicon-generator.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 60,
    "kind": "variable",
    "name": "REQUIRED_PNG_IMAGE_SIZES",
    "memberof": "src/lib/favicon-generator.js",
    "static": true,
    "longname": "src/lib/favicon-generator.js~REQUIRED_PNG_IMAGE_SIZES",
    "access": "public",
    "export": false,
    "importPath": "icon-gen/src/lib/favicon-generator.js",
    "importStyle": null,
    "description": "Sizes required for the PNG files.",
    "lineNumber": 10,
    "type": {
      "nullable": null,
      "types": [
        "Number[]"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 61,
    "kind": "variable",
    "name": "REQUIRED_ICO_IMAGE_SIZES",
    "memberof": "src/lib/favicon-generator.js",
    "static": true,
    "longname": "src/lib/favicon-generator.js~REQUIRED_ICO_IMAGE_SIZES",
    "access": "public",
    "export": false,
    "importPath": "icon-gen/src/lib/favicon-generator.js",
    "importStyle": null,
    "description": "Sizes required for ICO file.",
    "lineNumber": 16,
    "type": {
      "nullable": null,
      "types": [
        "Number[]"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 62,
    "kind": "variable",
    "name": "REQUIRED_IMAGE_SIZES",
    "memberof": "src/lib/favicon-generator.js",
    "static": true,
    "longname": "src/lib/favicon-generator.js~REQUIRED_IMAGE_SIZES",
    "access": "public",
    "export": false,
    "importPath": "icon-gen/src/lib/favicon-generator.js",
    "importStyle": null,
    "description": "Sizes required for Favicon files.",
    "lineNumber": 22,
    "type": {
      "nullable": null,
      "types": [
        "Number[]"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 63,
    "kind": "variable",
    "name": "ICO_FILE_NAME",
    "memberof": "src/lib/favicon-generator.js",
    "static": true,
    "longname": "src/lib/favicon-generator.js~ICO_FILE_NAME",
    "access": "public",
    "export": false,
    "importPath": "icon-gen/src/lib/favicon-generator.js",
    "importStyle": null,
    "description": "File name of Favicon file.",
    "lineNumber": 30,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 64,
    "kind": "variable",
    "name": "PNG_FILE_NAME_PREFIX",
    "memberof": "src/lib/favicon-generator.js",
    "static": true,
    "longname": "src/lib/favicon-generator.js~PNG_FILE_NAME_PREFIX",
    "access": "public",
    "export": false,
    "importPath": "icon-gen/src/lib/favicon-generator.js",
    "importStyle": null,
    "description": "Prefix of PNG file names.",
    "lineNumber": 36,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 65,
    "kind": "function",
    "name": "copyImage",
    "memberof": "src/lib/favicon-generator.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/favicon-generator.js~copyImage",
    "access": "public",
    "export": false,
    "importPath": "icon-gen/src/lib/favicon-generator.js",
    "importStyle": null,
    "description": "Copy to image.",
    "lineNumber": 46,
    "params": [
      {
        "nullable": null,
        "types": [
          "ImageInfo"
        ],
        "spread": false,
        "optional": false,
        "name": "image",
        "description": "Image information."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "dir",
        "description": "Output destination The path of directory."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "prefix",
        "description": "Prefix of an output PNG files. Start with the alphabet, can use `-` and `_`. This option is for PNG. The name of the ICO file is always `favicon.ico`."
      },
      {
        "nullable": null,
        "types": [
          "Logger"
        ],
        "spread": false,
        "optional": false,
        "name": "logger",
        "description": "Logger."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Task to copy an image."
    },
    "ignore": true
  },
  {
    "__docId__": 66,
    "kind": "function",
    "name": "generatePNG",
    "memberof": "src/lib/favicon-generator.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/favicon-generator.js~generatePNG",
    "access": "public",
    "export": false,
    "importPath": "icon-gen/src/lib/favicon-generator.js",
    "importStyle": null,
    "description": "Generate the FAVICON PNG file from the PNG images.",
    "lineNumber": 75,
    "params": [
      {
        "nullable": null,
        "types": [
          "ImageInfo[]"
        ],
        "spread": false,
        "optional": false,
        "name": "images",
        "description": "File information for the PNG files generation."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "dir",
        "description": "Output destination the path of directory."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "prefix",
        "description": "Prefix of an output PNG files. Start with the alphabet, can use `-` and `_`. This option is for PNG. The name of the ICO file is always `favicon.ico`."
      },
      {
        "nullable": null,
        "types": [
          "Number[]"
        ],
        "spread": false,
        "optional": false,
        "name": "sizes",
        "description": "Size structure of PNG files to output."
      },
      {
        "nullable": null,
        "types": [
          "Logger"
        ],
        "spread": false,
        "optional": false,
        "name": "logger",
        "description": "Logger."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise object."
    },
    "ignore": true
  },
  {
    "__docId__": 67,
    "kind": "function",
    "name": "generateICO",
    "memberof": "src/lib/favicon-generator.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/favicon-generator.js~generateICO",
    "access": "public",
    "export": false,
    "importPath": "icon-gen/src/lib/favicon-generator.js",
    "importStyle": null,
    "description": "Generate the FAVICON file from the PNG images.",
    "lineNumber": 102,
    "params": [
      {
        "nullable": null,
        "types": [
          "ImageInfo[]"
        ],
        "spread": false,
        "optional": false,
        "name": "images",
        "description": "File information for the PNG files generation."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "dir",
        "description": "Output destination the path of directory."
      },
      {
        "nullable": null,
        "types": [
          "Number[]"
        ],
        "spread": false,
        "optional": false,
        "name": "sizes",
        "description": "Structure of an image sizes for ICO."
      },
      {
        "nullable": null,
        "types": [
          "Logger"
        ],
        "spread": false,
        "optional": false,
        "name": "logger",
        "description": "Logger."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise object."
    },
    "ignore": true
  },
  {
    "__docId__": 68,
    "kind": "function",
    "name": "checkOptions",
    "memberof": "src/lib/favicon-generator.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/favicon-generator.js~checkOptions",
    "access": "public",
    "export": false,
    "importPath": "icon-gen/src/lib/favicon-generator.js",
    "importStyle": null,
    "description": "Check an option properties.",
    "lineNumber": 115,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object} Checked options."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "options.name",
        "description": "Prefix of an output PNG files. Start with the alphabet, can use `-` and `_`. This option is for PNG. The name of the ICO file is always `favicon.ico`."
      },
      {
        "nullable": null,
        "types": [
          "Number[]"
        ],
        "spread": false,
        "optional": false,
        "name": "options.sizes",
        "description": "Size structure of PNG files to output."
      },
      {
        "nullable": null,
        "types": [
          "Number[]"
        ],
        "spread": false,
        "optional": false,
        "name": "options.ico",
        "description": "Structure of an image sizes for ICO."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "Checked options."
    },
    "ignore": true
  },
  {
    "__docId__": 69,
    "kind": "function",
    "name": "GetRequiredFavoriteImageSizes",
    "memberof": "src/lib/favicon-generator.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/favicon-generator.js~GetRequiredFavoriteImageSizes",
    "access": "public",
    "export": true,
    "importPath": "icon-gen/src/lib/favicon-generator.js",
    "importStyle": "{GetRequiredFavoriteImageSizes}",
    "description": "Get the size of the required PNG.",
    "lineNumber": 135,
    "return": {
      "nullable": null,
      "types": [
        "Number[]"
      ],
      "spread": false,
      "description": "Sizes."
    },
    "params": []
  },
  {
    "__docId__": 70,
    "kind": "function",
    "name": "GenerateFavicon",
    "memberof": "src/lib/favicon-generator.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/favicon-generator.js~GenerateFavicon",
    "access": "public",
    "export": true,
    "importPath": "icon-gen/src/lib/favicon-generator.js",
    "importStyle": "GenerateFavicon",
    "description": "Generate a FAVICON image files (ICO and PNG) from the PNG images.",
    "lineNumber": 150,
    "params": [
      {
        "nullable": null,
        "types": [
          "ImageInfo[]"
        ],
        "spread": false,
        "optional": false,
        "name": "images",
        "description": "File information for the PNG files generation."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "dir",
        "description": "Output destination the path of directory."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "options.name",
        "description": "Prefix of an output PNG files. Start with the alphabet, can use `-` and `_`. This option is for PNG. The name of the ICO file is always `favicon.ico`."
      },
      {
        "nullable": null,
        "types": [
          "Number[]"
        ],
        "spread": false,
        "optional": false,
        "name": "options.sizes",
        "description": "Size structure of PNG files to output."
      },
      {
        "nullable": null,
        "types": [
          "Number[]"
        ],
        "spread": false,
        "optional": false,
        "name": "options.ico",
        "description": "Structure of an image sizes for ICO."
      },
      {
        "nullable": null,
        "types": [
          "Logger"
        ],
        "spread": false,
        "optional": false,
        "name": "logger",
        "description": "Logger."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise object."
    }
  },
  {
    "__docId__": 71,
    "kind": "file",
    "name": "src/lib/icns-generator.js",
    "content": "import Fs from 'fs'\nimport Path from 'path'\nimport Util from './util.js'\nimport { PNG } from 'pngjs-nozlib'\nimport { PackICNS } from './rle.js'\nimport { Buffer } from 'buffer'\nimport { Promise } from 'es6-promise'\n\n/**\n * Sizes required for the ICNS file.\n * @type {Array}\n */\nconst REQUIRED_IMAGE_SIZES = [16, 32, 64, 128, 256, 512, 1024]\n\n/**\n * The size of the ICNS header.\n * @type {Number}\n */\nconst HEADER_SIZE = 8\n\n/**\n * Identifier of the ICNS file, in ASCII \"icns\".\n * @type {Number}\n */\nconst FILE_HEADER_ID = 'icns'\n\n/**\n * Default file name.\n * @type {String}\n */\nconst DEFAULT_FILE_NAME = 'app'\n\n/**\n * ICNS file extension.\n * @type {String}\n */\nconst FILE_EXTENSION = '.icns'\n\n/**\n * Information of the images, Mac OS 8.x (il32, is32, l8mk, s8mk) is unsupported.\n * If icp4, icp5, icp6 is present, Icon will not be supported because it can not be set as Folder of Finder.\n *\n * @type {Array.<ICNSIconInfo>}\n */\nconst ICON_INFOS = [\n  // Normal\n  { id: 'ic07', size: 128 },\n  { id: 'ic08', size: 256 },\n  { id: 'ic09', size: 512 },\n  { id: 'ic10', size: 1024 },\n\n  // Retina\n  { id: 'ic11', size: 32 },\n  { id: 'ic12', size: 64 },\n  { id: 'ic13', size: 256 },\n  { id: 'ic14', size: 512 },\n\n  // Mac OS 8.5\n  { id: 'is32', mask: 's8mk', size: 16 },\n  { id: 'il32', mask: 'l8mk', size: 32 }\n]\n\n/**\n * Select the support image from the icon size.\n * @param {Number} size Sizo of icon.\n * @param {ImageInfo[]} images File informations..\n * @return {ImageInfo} If successful image information, otherwise null.\n */\nconst imageFromIconSize = (size, images) => {\n  let result = null\n  images.some((image) => {\n    if (image.size === size) {\n      result = image\n      return true\n    }\n\n    return false\n  })\n\n  return result\n}\n\n/**\n * Create the ICNS file header.\n *\n * @param {Number} fileSize File size.\n *\n * @return {Buffer} Header data.\n */\nconst createFileHeader = (fileSize) => {\n  const buffer = Buffer.alloc(HEADER_SIZE)\n  buffer.write(FILE_HEADER_ID, 0, 'ascii')\n  buffer.writeUInt32BE(fileSize, 4)\n\n  return buffer\n}\n\n/**\n * Create the Icon header in ICNS file.\n * @param {Object} id Identifier of the icon.\n * @param {Number} imageSize Size of the image data.\n * @return {Buffer} Header data.\n */\nconst createIconHeader = (id, imageSize) => {\n  const buffer = Buffer.alloc(HEADER_SIZE)\n  buffer.write(id, 0, 'ascii')\n  buffer.writeUInt32BE(HEADER_SIZE + imageSize, 4)\n\n  return buffer\n}\n\n/**\n * Create a color and mask data.\n * @param {ImageInfo} data Information of the image.\n * @return {Object} Bodies, \"color\" is a color (Compressed by ICNS RLE), \"mask\" is a mask.\n */\nconst createIconBlockPackBitsBodies = (data) => {\n  if (!data) {\n    return null\n  }\n\n  const png = PNG.sync.read(data)\n  const results = { colors: [], masks: [] }\n  const r = []\n  const g = []\n  const b = []\n\n  for (let i = 0, max = png.data.length; i < max; i += 4) {\n    // RGB\n    r.push(png.data.readUInt8(i))\n    g.push(png.data.readUInt8(i + 1))\n    b.push(png.data.readUInt8(i + 2))\n\n    // Alpha\n    results.masks.push(png.data.readUInt8(i + 3))\n  }\n\n  // Compress\n  results.colors = results.colors.concat(PackICNS(r))\n  results.colors = results.colors.concat(PackICNS(g))\n  results.colors = results.colors.concat(PackICNS(b))\n\n  return results\n}\n\n/**\n * Create an icon block's data.\n * @param {String} id Identifier of the icon.\n * @param {Buffer} data Body data of the icon.\n * @return {Buffer} data.\n */\nconst createIconBlock = (id, data) => {\n  if (!data) {\n    return null\n  }\n\n  const header = createIconHeader(id, data.length)\n  return Buffer.concat([header, data], header.length + data.length)\n}\n\n/**\n * Create an icon blocks (Color and mask) for PackBits.\n * @param {String} id Identifier of the icon (color block).\n * @param {String} mask Identifier of the icon (mask block).\n * @param {Buffer} data Binary of the PNG image.\n * @return {Buffer} If successful it wrote the icon block. `null` on failure.\n */\nconst createIconBlockPackBits = (id, mask, data) => {\n  const bodies = createIconBlockPackBitsBodies(data)\n  if (!bodies) {\n    return null\n  }\n\n  const colorBlock = createIconBlock(id, Buffer.from(bodies.colors))\n  const maskBlock = createIconBlock(mask, Buffer.from(bodies.masks))\n\n  return Buffer.concat([colorBlock, maskBlock], colorBlock.length + maskBlock.length)\n}\n\n/**\n * Creat a file header and icon blocks.\n * @param {ImageInfo[]} images Information of the image files.\n * @param {String} dest The path of the output destination file.\n * @return {Boolean} `true` if it succeeds.\n */\nconst createIcon = (images, dest) => {\n  // Write a temporary file size\n  let fileSize = HEADER_SIZE\n  let stream = Fs.createWriteStream(dest)\n  stream.write(createFileHeader(fileSize), 'binary')\n\n  for (let i = 0, max = ICON_INFOS.length; i < max; ++i) {\n    const info = ICON_INFOS[i]\n    const image = imageFromIconSize(info.size, images)\n    if (!image) {\n      // Depending on the command line option, there may be no corresponding size\n      continue\n    }\n\n    let block = null\n    switch (info.id) {\n      case 'is32':\n      case 'il32':\n        block = createIconBlockPackBits(info.id, info.mask, Fs.readFileSync(image.path))\n        break\n\n      default:\n        block = createIconBlock(info.id, Fs.readFileSync(image.path))\n        break\n    }\n\n    if (block) {\n      stream.write(block, 'binary')\n      fileSize += block.length\n    } else {\n      fileSize = 0\n      break\n    }\n  }\n\n  stream.end()\n\n  if (fileSize === 0) {\n    return false\n  }\n\n  // Update an actual file size\n  stream = Fs.createWriteStream(dest)\n  stream.write(createFileHeader(fileSize), 'binary')\n  stream.end()\n\n  return true\n}\n\n/**\n * Check an option properties.\n * @param {Object} options Output destination the path of directory.\n * @param {String} options.name Name of an output file.\n * @param {Number[]} options.sizes Structure of an image sizes.\n * @returns {Object} Checked options.\n */\nconst checkOptions = (options) => {\n  if (options) {\n    return {\n      name: typeof options.name === 'string' && options.name !== '' ? options.name : DEFAULT_FILE_NAME,\n      sizes: Array.isArray(options.sizes) ? options.sizes : REQUIRED_IMAGE_SIZES\n    }\n  } else {\n    return {\n      name: DEFAULT_FILE_NAME,\n      sizes: REQUIRED_IMAGE_SIZES\n    }\n  }\n}\n\n/**\n * Unpack an icon block files from ICNS file (For debug).\n * @param {String} src Path of the ICNS file.\n * @param {String} dest Path of directory to output icon block files.\n * @return {Promise} Promise object.\n */\nexport const DebugUnpackIconBlocks = (src, dest) => {\n  return new Promise((resolve, reject) => {\n    Fs.readFile(src, (err, data) => {\n      if (err) {\n        return reject(err)\n      }\n\n      for (let pos = HEADER_SIZE, max = data.length; pos < max; ) {\n        const header = data.slice(pos, pos + HEADER_SIZE)\n        const id = header.toString('ascii', 0, 4)\n        const size = header.readUInt32BE(4) - HEADER_SIZE\n\n        pos += HEADER_SIZE\n        const body = data.slice(pos, pos + size)\n        Fs.writeFileSync(Path.join(dest, id + '.header'), header, 'binary')\n        Fs.writeFileSync(Path.join(dest, id + '.body'), body, 'binary')\n\n        pos += size\n      }\n\n      resolve()\n    })\n  })\n}\n\n/**\n * Get the size of the required PNG.\n * @return {Number[]} Sizes.\n */\nexport const GetRequiredICNSImageSizes = () => {\n  return REQUIRED_IMAGE_SIZES\n}\n\n/**\n * Create the ICNS file from a PNG images.\n * @param {ImageInfo[]} images Information of the image files.\n * @param {String} dir Output destination the path of directory.\n * @param {Object} options Options.\n * @param {Logger} logger Logger.\n * @return {Promise} Promise object.\n */\nconst GenerateICNS = (images, dir, options, logger) => {\n  return new Promise((resolve, reject) => {\n    logger.log('ICNS:')\n\n    const opt = checkOptions(options)\n    const dest = Path.join(dir, opt.name + FILE_EXTENSION)\n    const targets = Util.filterImagesBySizes(images, opt.sizes)\n\n    if (createIcon(targets, dest)) {\n      logger.log('  Create: ' + dest)\n      resolve(dest)\n    } else {\n      Fs.unlinkSync(dest)\n      reject(new Error('Faild to read/write image.'))\n    }\n  })\n}\n\nexport default GenerateICNS\n",
    "static": true,
    "longname": "/Users/akabeko/Documents/dev/node/icon-gen/src/lib/icns-generator.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 72,
    "kind": "variable",
    "name": "REQUIRED_IMAGE_SIZES",
    "memberof": "src/lib/icns-generator.js",
    "static": true,
    "longname": "src/lib/icns-generator.js~REQUIRED_IMAGE_SIZES",
    "access": "public",
    "export": false,
    "importPath": "icon-gen/src/lib/icns-generator.js",
    "importStyle": null,
    "description": "Sizes required for the ICNS file.",
    "lineNumber": 13,
    "type": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 73,
    "kind": "variable",
    "name": "HEADER_SIZE",
    "memberof": "src/lib/icns-generator.js",
    "static": true,
    "longname": "src/lib/icns-generator.js~HEADER_SIZE",
    "access": "public",
    "export": false,
    "importPath": "icon-gen/src/lib/icns-generator.js",
    "importStyle": null,
    "description": "The size of the ICNS header.",
    "lineNumber": 19,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 74,
    "kind": "variable",
    "name": "FILE_HEADER_ID",
    "memberof": "src/lib/icns-generator.js",
    "static": true,
    "longname": "src/lib/icns-generator.js~FILE_HEADER_ID",
    "access": "public",
    "export": false,
    "importPath": "icon-gen/src/lib/icns-generator.js",
    "importStyle": null,
    "description": "Identifier of the ICNS file, in ASCII \"icns\".",
    "lineNumber": 25,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 75,
    "kind": "variable",
    "name": "DEFAULT_FILE_NAME",
    "memberof": "src/lib/icns-generator.js",
    "static": true,
    "longname": "src/lib/icns-generator.js~DEFAULT_FILE_NAME",
    "access": "public",
    "export": false,
    "importPath": "icon-gen/src/lib/icns-generator.js",
    "importStyle": null,
    "description": "Default file name.",
    "lineNumber": 31,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 76,
    "kind": "variable",
    "name": "FILE_EXTENSION",
    "memberof": "src/lib/icns-generator.js",
    "static": true,
    "longname": "src/lib/icns-generator.js~FILE_EXTENSION",
    "access": "public",
    "export": false,
    "importPath": "icon-gen/src/lib/icns-generator.js",
    "importStyle": null,
    "description": "ICNS file extension.",
    "lineNumber": 37,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 77,
    "kind": "variable",
    "name": "ICON_INFOS",
    "memberof": "src/lib/icns-generator.js",
    "static": true,
    "longname": "src/lib/icns-generator.js~ICON_INFOS",
    "access": "public",
    "export": false,
    "importPath": "icon-gen/src/lib/icns-generator.js",
    "importStyle": null,
    "description": "Information of the images, Mac OS 8.x (il32, is32, l8mk, s8mk) is unsupported.\nIf icp4, icp5, icp6 is present, Icon will not be supported because it can not be set as Folder of Finder.",
    "lineNumber": 45,
    "type": {
      "nullable": null,
      "types": [
        "Array.<ICNSIconInfo>"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 78,
    "kind": "function",
    "name": "imageFromIconSize",
    "memberof": "src/lib/icns-generator.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/icns-generator.js~imageFromIconSize",
    "access": "public",
    "export": false,
    "importPath": "icon-gen/src/lib/icns-generator.js",
    "importStyle": null,
    "description": "Select the support image from the icon size.",
    "lineNumber": 69,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "size",
        "description": "Sizo of icon."
      },
      {
        "nullable": null,
        "types": [
          "ImageInfo[]"
        ],
        "spread": false,
        "optional": false,
        "name": "images",
        "description": "File informations.."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ImageInfo"
      ],
      "spread": false,
      "description": "If successful image information, otherwise null."
    },
    "ignore": true
  },
  {
    "__docId__": 79,
    "kind": "function",
    "name": "createFileHeader",
    "memberof": "src/lib/icns-generator.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/icns-generator.js~createFileHeader",
    "access": "public",
    "export": false,
    "importPath": "icon-gen/src/lib/icns-generator.js",
    "importStyle": null,
    "description": "Create the ICNS file header.",
    "lineNumber": 90,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "fileSize",
        "description": "File size."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Buffer"
      ],
      "spread": false,
      "description": "Header data."
    },
    "ignore": true
  },
  {
    "__docId__": 80,
    "kind": "function",
    "name": "createIconHeader",
    "memberof": "src/lib/icns-generator.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/icns-generator.js~createIconHeader",
    "access": "public",
    "export": false,
    "importPath": "icon-gen/src/lib/icns-generator.js",
    "importStyle": null,
    "description": "Create the Icon header in ICNS file.",
    "lineNumber": 104,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "Identifier of the icon."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "imageSize",
        "description": "Size of the image data."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Buffer"
      ],
      "spread": false,
      "description": "Header data."
    },
    "ignore": true
  },
  {
    "__docId__": 81,
    "kind": "function",
    "name": "createIconBlockPackBitsBodies",
    "memberof": "src/lib/icns-generator.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/icns-generator.js~createIconBlockPackBitsBodies",
    "access": "public",
    "export": false,
    "importPath": "icon-gen/src/lib/icns-generator.js",
    "importStyle": null,
    "description": "Create a color and mask data.",
    "lineNumber": 117,
    "params": [
      {
        "nullable": null,
        "types": [
          "ImageInfo"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "Information of the image."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "Bodies, \"color\" is a color (Compressed by ICNS RLE), \"mask\" is a mask."
    },
    "ignore": true
  },
  {
    "__docId__": 82,
    "kind": "function",
    "name": "createIconBlock",
    "memberof": "src/lib/icns-generator.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/icns-generator.js~createIconBlock",
    "access": "public",
    "export": false,
    "importPath": "icon-gen/src/lib/icns-generator.js",
    "importStyle": null,
    "description": "Create an icon block's data.",
    "lineNumber": 152,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "Identifier of the icon."
      },
      {
        "nullable": null,
        "types": [
          "Buffer"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "Body data of the icon."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Buffer"
      ],
      "spread": false,
      "description": "data."
    },
    "ignore": true
  },
  {
    "__docId__": 83,
    "kind": "function",
    "name": "createIconBlockPackBits",
    "memberof": "src/lib/icns-generator.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/icns-generator.js~createIconBlockPackBits",
    "access": "public",
    "export": false,
    "importPath": "icon-gen/src/lib/icns-generator.js",
    "importStyle": null,
    "description": "Create an icon blocks (Color and mask) for PackBits.",
    "lineNumber": 168,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "Identifier of the icon (color block)."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "mask",
        "description": "Identifier of the icon (mask block)."
      },
      {
        "nullable": null,
        "types": [
          "Buffer"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "Binary of the PNG image."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Buffer"
      ],
      "spread": false,
      "description": "If successful it wrote the icon block. `null` on failure."
    },
    "ignore": true
  },
  {
    "__docId__": 84,
    "kind": "function",
    "name": "createIcon",
    "memberof": "src/lib/icns-generator.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/icns-generator.js~createIcon",
    "access": "public",
    "export": false,
    "importPath": "icon-gen/src/lib/icns-generator.js",
    "importStyle": null,
    "description": "Creat a file header and icon blocks.",
    "lineNumber": 186,
    "params": [
      {
        "nullable": null,
        "types": [
          "ImageInfo[]"
        ],
        "spread": false,
        "optional": false,
        "name": "images",
        "description": "Information of the image files."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "dest",
        "description": "The path of the output destination file."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "`true` if it succeeds."
    },
    "ignore": true
  },
  {
    "__docId__": 85,
    "kind": "function",
    "name": "checkOptions",
    "memberof": "src/lib/icns-generator.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/icns-generator.js~checkOptions",
    "access": "public",
    "export": false,
    "importPath": "icon-gen/src/lib/icns-generator.js",
    "importStyle": null,
    "description": "Check an option properties.",
    "lineNumber": 242,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object} Checked options."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Output destination the path of directory."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "options.name",
        "description": "Name of an output file."
      },
      {
        "nullable": null,
        "types": [
          "Number[]"
        ],
        "spread": false,
        "optional": false,
        "name": "options.sizes",
        "description": "Structure of an image sizes."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "Checked options."
    },
    "ignore": true
  },
  {
    "__docId__": 86,
    "kind": "function",
    "name": "DebugUnpackIconBlocks",
    "memberof": "src/lib/icns-generator.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/icns-generator.js~DebugUnpackIconBlocks",
    "access": "public",
    "export": true,
    "importPath": "icon-gen/src/lib/icns-generator.js",
    "importStyle": "{DebugUnpackIconBlocks}",
    "description": "Unpack an icon block files from ICNS file (For debug).",
    "lineNumber": 262,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "src",
        "description": "Path of the ICNS file."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "dest",
        "description": "Path of directory to output icon block files."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise object."
    }
  },
  {
    "__docId__": 87,
    "kind": "function",
    "name": "GetRequiredICNSImageSizes",
    "memberof": "src/lib/icns-generator.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/icns-generator.js~GetRequiredICNSImageSizes",
    "access": "public",
    "export": true,
    "importPath": "icon-gen/src/lib/icns-generator.js",
    "importStyle": "{GetRequiredICNSImageSizes}",
    "description": "Get the size of the required PNG.",
    "lineNumber": 291,
    "return": {
      "nullable": null,
      "types": [
        "Number[]"
      ],
      "spread": false,
      "description": "Sizes."
    },
    "params": []
  },
  {
    "__docId__": 88,
    "kind": "function",
    "name": "GenerateICNS",
    "memberof": "src/lib/icns-generator.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/icns-generator.js~GenerateICNS",
    "access": "public",
    "export": true,
    "importPath": "icon-gen/src/lib/icns-generator.js",
    "importStyle": "GenerateICNS",
    "description": "Create the ICNS file from a PNG images.",
    "lineNumber": 303,
    "params": [
      {
        "nullable": null,
        "types": [
          "ImageInfo[]"
        ],
        "spread": false,
        "optional": false,
        "name": "images",
        "description": "Information of the image files."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "dir",
        "description": "Output destination the path of directory."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options."
      },
      {
        "nullable": null,
        "types": [
          "Logger"
        ],
        "spread": false,
        "optional": false,
        "name": "logger",
        "description": "Logger."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise object."
    }
  },
  {
    "__docId__": 89,
    "kind": "file",
    "name": "src/lib/ico-generator.js",
    "content": "import Fs from 'fs'\nimport Path from 'path'\nimport Util from './util.js'\nimport { PNG } from 'pngjs-nozlib'\n\n/**\n * Sizes required for the ICO file.\n * @type {Number[]}\n */\nconst REQUIRED_IMAGE_SIZES = [16, 24, 32, 48, 64, 128, 256]\n\n/**\n * Default name of ICO file.\n */\nconst DEFAULT_FILE_NAME = 'app'\n\n/**\n * File extension of ICO file.\n * @type {String}\n */\nconst FILE_EXTENSION = '.ico'\n\n/**\n * Size of the file header.\n * @type {Number}\n */\nconst HEADER_SIZE = 6\n\n/**\n * Size of the icon directory.\n * @type {Number}\n */\nconst DIRECTORY_SIZE = 16\n\n/**\n * Size of the BITMAPINFOHEADER.\n * @type {Number}\n */\nconst BITMAPINFOHEADER_SIZE = 40\n\n/**\n * Color mode.\n * @type {Number}\n */\nconst BI_RGB = 0\n\n/**\n * Convert a PNG of the byte array to the DIB (Device Independent Bitmap) format.\n * PNG in color RGBA (and more), the coordinate structure is the Top/Left to Bottom/Right.\n * DIB in color BGRA, the coordinate structure is the Bottom/Left to Top/Right.\n * @param {Buffer} src Target image.\n * @param {Number} width The width of the image.\n * @param {Number} height The height of the image.\n * @param {Number} bpp The bit per pixel of the image.\n * @return {Buffer} Converted image\n * @see https://en.wikipedia.org/wiki/BMP_file_format\n */\nconst convertPNGtoDIB = (src, width, height, bpp) => {\n  const cols = width * bpp\n  const rows = height * cols\n  const rowEnd = rows - cols\n  const dest = Buffer.alloc(src.length)\n\n  for (let row = 0; row < rows; row += cols) {\n    for (let col = 0; col < cols; col += bpp) {\n      // RGBA: Top/Left -> Bottom/Right\n      let pos = row + col\n      const r = src.readUInt8(pos)\n      const g = src.readUInt8(pos + 1)\n      const b = src.readUInt8(pos + 2)\n      const a = src.readUInt8(pos + 3)\n\n      // BGRA: Right/Left -> Top/Right\n      pos = rowEnd - row + col\n      dest.writeUInt8(b, pos)\n      dest.writeUInt8(g, pos + 1)\n      dest.writeUInt8(r, pos + 2)\n      dest.writeUInt8(a, pos + 3)\n    }\n  }\n\n  return dest\n}\n\n/**\n * Create the BITMAPINFOHEADER.\n * @param {Object} png PNG image.\n * @param {Number} compression Compression mode\n * @return {Buffer} BITMAPINFOHEADER data.\n * @see https://msdn.microsoft.com/ja-jp/library/windows/desktop/dd183376%28v=vs.85%29.aspx\n */\nconst createBitmapInfoHeader = (png, compression) => {\n  const b = Buffer.alloc(BITMAPINFOHEADER_SIZE)\n  b.writeUInt32LE(BITMAPINFOHEADER_SIZE, 0) // 4 DWORD biSize\n  b.writeInt32LE(png.width, 4) // 4 LONG  biWidth\n  b.writeInt32LE(png.height * 2, 8) // 4 LONG  biHeight\n  b.writeUInt16LE(1, 12) // 2 WORD  biPlanes\n  b.writeUInt16LE(png.bpp * 8, 14) // 2 WORD  biBitCount\n  b.writeUInt32LE(compression, 16) // 4 DWORD biCompression\n  b.writeUInt32LE(png.data.length, 20) // 4 DWORD biSizeImage\n  b.writeInt32LE(0, 24) // 4 LONG  biXPelsPerMeter\n  b.writeInt32LE(0, 28) // 4 LONG  biYPelsPerMeter\n  b.writeUInt32LE(0, 32) // 4 DWORD biClrUsed\n  b.writeUInt32LE(0, 36) // 4 DWORD biClrImportant\n\n  return b\n}\n\n/**\n * Create the Icon entry.\n *\n * @param {Object} png    PNG image.\n * @param {Number} offset The offset of directory data from the beginning of the ICO/CUR file\n *\n * @return {Buffer} Directory data.\n *\n * @see https://msdn.microsoft.com/en-us/library/ms997538.aspx\n */\nconst createDirectory = (png, offset) => {\n  const b = Buffer.alloc(DIRECTORY_SIZE)\n  const size = png.data.length + BITMAPINFOHEADER_SIZE\n  const width = 256 <= png.width ? 0 : png.width\n  const height = 256 <= png.height ? 0 : png.height\n  const bpp = png.bpp * 8\n\n  b.writeUInt8(width, 0) // 1 BYTE  Image width\n  b.writeUInt8(height, 1) // 1 BYTE  Image height\n  b.writeUInt8(0, 2) // 1 BYTE  Colors\n  b.writeUInt8(0, 3) // 1 BYTE  Reserved\n  b.writeUInt16LE(1, 4) // 2 WORD  Color planes\n  b.writeUInt16LE(bpp, 6) // 2 WORD  Bit per pixel\n  b.writeUInt32LE(size, 8) // 4 DWORD Bitmap (DIB) size\n  b.writeUInt32LE(offset, 12) // 4 DWORD Offset\n\n  return b\n}\n\n/**\n * Create the ICO file header.\n * @param {Number} count Specifies number of images in the file.\n * @return {Buffer} Header data.\n * @see https://msdn.microsoft.com/en-us/library/ms997538.aspx\n */\nconst createFileHeader = (count) => {\n  const b = Buffer.alloc(HEADER_SIZE)\n  b.writeUInt16LE(0, 0) // 2 WORD Reserved\n  b.writeUInt16LE(1, 2) // 2 WORD Type\n  b.writeUInt16LE(count, 4) // 2 WORD Image count\n\n  return b\n}\n\n/**\n * Check an option properties.\n * @param {Object} options Output destination the path of directory.\n * @param {String} options.name Name of an output file.\n * @param {Number[]} options.sizes Structure of an image sizes.\n * @returns {Object} Checked options.\n */\nconst checkOptions = (options) => {\n  if (options) {\n    return {\n      name: typeof options.name === 'string' && options.name !== '' ? options.name : DEFAULT_FILE_NAME,\n      sizes: Array.isArray(options.sizes) ? options.sizes : REQUIRED_IMAGE_SIZES\n    }\n  } else {\n    return {\n      name: DEFAULT_FILE_NAME,\n      sizes: REQUIRED_IMAGE_SIZES\n    }\n  }\n}\n\n/**\n * Get the size of the required PNG.\n * @return {Number[]} Sizes.\n */\nexport const GetRequiredICOImageSizes = () => {\n  return REQUIRED_IMAGE_SIZES\n}\n\n/**\n * Generate the ICO file from a PNG images.\n * @param {ImageInfo[]} images File informations..\n * @param {String} dir Output destination the path of directory.\n * @param {Object} options Options.\n * @param {String} options.name Name of an output file.\n * @param {Number} options.sizes Structure of an image sizes.\n * @param {Logger} logger Logger.\n * @return {Promise} Promise object.\n */\nconst GenerateICO = (images, dir, options, logger) => {\n  return new Promise((resolve) => {\n    logger.log('ICO:')\n\n    const opt = checkOptions(options)\n    const dest = Path.join(dir, opt.name + FILE_EXTENSION)\n    const targets = Util.filterImagesBySizes(images, opt.sizes)\n    const stream = Fs.createWriteStream(dest)\n    stream.write(createFileHeader(targets.length), 'binary')\n\n    const pngs = targets.map((image) => {\n      const data = Fs.readFileSync(image.path)\n      return PNG.sync.read(data)\n    })\n\n    let offset = HEADER_SIZE + DIRECTORY_SIZE * targets.length\n    pngs.forEach((png) => {\n      const directory = createDirectory(png, offset)\n      stream.write(directory, 'binary')\n      offset += png.data.length + BITMAPINFOHEADER_SIZE\n    })\n\n    pngs.forEach((png) => {\n      const header = createBitmapInfoHeader(png, BI_RGB)\n      stream.write(header, 'binary')\n\n      const dib = convertPNGtoDIB(png.data, png.width, png.height, png.bpp)\n      stream.write(dib, 'binary')\n    })\n\n    stream.end()\n\n    logger.log('  Create: ' + dest)\n    resolve(dest)\n  })\n}\n\nexport default GenerateICO\n",
    "static": true,
    "longname": "/Users/akabeko/Documents/dev/node/icon-gen/src/lib/ico-generator.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 90,
    "kind": "variable",
    "name": "REQUIRED_IMAGE_SIZES",
    "memberof": "src/lib/ico-generator.js",
    "static": true,
    "longname": "src/lib/ico-generator.js~REQUIRED_IMAGE_SIZES",
    "access": "public",
    "export": false,
    "importPath": "icon-gen/src/lib/ico-generator.js",
    "importStyle": null,
    "description": "Sizes required for the ICO file.",
    "lineNumber": 10,
    "type": {
      "nullable": null,
      "types": [
        "Number[]"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 91,
    "kind": "variable",
    "name": "DEFAULT_FILE_NAME",
    "memberof": "src/lib/ico-generator.js",
    "static": true,
    "longname": "src/lib/ico-generator.js~DEFAULT_FILE_NAME",
    "access": "public",
    "export": false,
    "importPath": "icon-gen/src/lib/ico-generator.js",
    "importStyle": null,
    "description": "Default name of ICO file.",
    "lineNumber": 15,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 92,
    "kind": "variable",
    "name": "FILE_EXTENSION",
    "memberof": "src/lib/ico-generator.js",
    "static": true,
    "longname": "src/lib/ico-generator.js~FILE_EXTENSION",
    "access": "public",
    "export": false,
    "importPath": "icon-gen/src/lib/ico-generator.js",
    "importStyle": null,
    "description": "File extension of ICO file.",
    "lineNumber": 21,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 93,
    "kind": "variable",
    "name": "HEADER_SIZE",
    "memberof": "src/lib/ico-generator.js",
    "static": true,
    "longname": "src/lib/ico-generator.js~HEADER_SIZE",
    "access": "public",
    "export": false,
    "importPath": "icon-gen/src/lib/ico-generator.js",
    "importStyle": null,
    "description": "Size of the file header.",
    "lineNumber": 27,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 94,
    "kind": "variable",
    "name": "DIRECTORY_SIZE",
    "memberof": "src/lib/ico-generator.js",
    "static": true,
    "longname": "src/lib/ico-generator.js~DIRECTORY_SIZE",
    "access": "public",
    "export": false,
    "importPath": "icon-gen/src/lib/ico-generator.js",
    "importStyle": null,
    "description": "Size of the icon directory.",
    "lineNumber": 33,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 95,
    "kind": "variable",
    "name": "BITMAPINFOHEADER_SIZE",
    "memberof": "src/lib/ico-generator.js",
    "static": true,
    "longname": "src/lib/ico-generator.js~BITMAPINFOHEADER_SIZE",
    "access": "public",
    "export": false,
    "importPath": "icon-gen/src/lib/ico-generator.js",
    "importStyle": null,
    "description": "Size of the BITMAPINFOHEADER.",
    "lineNumber": 39,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 96,
    "kind": "variable",
    "name": "BI_RGB",
    "memberof": "src/lib/ico-generator.js",
    "static": true,
    "longname": "src/lib/ico-generator.js~BI_RGB",
    "access": "public",
    "export": false,
    "importPath": "icon-gen/src/lib/ico-generator.js",
    "importStyle": null,
    "description": "Color mode.",
    "lineNumber": 45,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 97,
    "kind": "function",
    "name": "convertPNGtoDIB",
    "memberof": "src/lib/ico-generator.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/ico-generator.js~convertPNGtoDIB",
    "access": "public",
    "export": false,
    "importPath": "icon-gen/src/lib/ico-generator.js",
    "importStyle": null,
    "description": "Convert a PNG of the byte array to the DIB (Device Independent Bitmap) format.\nPNG in color RGBA (and more), the coordinate structure is the Top/Left to Bottom/Right.\nDIB in color BGRA, the coordinate structure is the Bottom/Left to Top/Right.",
    "see": [
      "https://en.wikipedia.org/wiki/BMP_file_format"
    ],
    "lineNumber": 58,
    "params": [
      {
        "nullable": null,
        "types": [
          "Buffer"
        ],
        "spread": false,
        "optional": false,
        "name": "src",
        "description": "Target image."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "width",
        "description": "The width of the image."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "height",
        "description": "The height of the image."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "bpp",
        "description": "The bit per pixel of the image."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Buffer"
      ],
      "spread": false,
      "description": "Converted image"
    },
    "ignore": true
  },
  {
    "__docId__": 98,
    "kind": "function",
    "name": "createBitmapInfoHeader",
    "memberof": "src/lib/ico-generator.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/ico-generator.js~createBitmapInfoHeader",
    "access": "public",
    "export": false,
    "importPath": "icon-gen/src/lib/ico-generator.js",
    "importStyle": null,
    "description": "Create the BITMAPINFOHEADER.",
    "see": [
      "https://msdn.microsoft.com/ja-jp/library/windows/desktop/dd183376%28v=vs.85%29.aspx"
    ],
    "lineNumber": 92,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "png",
        "description": "PNG image."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "compression",
        "description": "Compression mode"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Buffer"
      ],
      "spread": false,
      "description": "BITMAPINFOHEADER data."
    },
    "ignore": true
  },
  {
    "__docId__": 99,
    "kind": "function",
    "name": "createDirectory",
    "memberof": "src/lib/ico-generator.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/ico-generator.js~createDirectory",
    "access": "public",
    "export": false,
    "importPath": "icon-gen/src/lib/ico-generator.js",
    "importStyle": null,
    "description": "Create the Icon entry.",
    "see": [
      "https://msdn.microsoft.com/en-us/library/ms997538.aspx"
    ],
    "lineNumber": 119,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "png",
        "description": "PNG image."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "offset",
        "description": "The offset of directory data from the beginning of the ICO/CUR file"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Buffer"
      ],
      "spread": false,
      "description": "Directory data."
    },
    "ignore": true
  },
  {
    "__docId__": 100,
    "kind": "function",
    "name": "createFileHeader",
    "memberof": "src/lib/ico-generator.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/ico-generator.js~createFileHeader",
    "access": "public",
    "export": false,
    "importPath": "icon-gen/src/lib/ico-generator.js",
    "importStyle": null,
    "description": "Create the ICO file header.",
    "see": [
      "https://msdn.microsoft.com/en-us/library/ms997538.aspx"
    ],
    "lineNumber": 144,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "count",
        "description": "Specifies number of images in the file."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Buffer"
      ],
      "spread": false,
      "description": "Header data."
    },
    "ignore": true
  },
  {
    "__docId__": 101,
    "kind": "function",
    "name": "checkOptions",
    "memberof": "src/lib/ico-generator.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/ico-generator.js~checkOptions",
    "access": "public",
    "export": false,
    "importPath": "icon-gen/src/lib/ico-generator.js",
    "importStyle": null,
    "description": "Check an option properties.",
    "lineNumber": 160,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object} Checked options."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Output destination the path of directory."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "options.name",
        "description": "Name of an output file."
      },
      {
        "nullable": null,
        "types": [
          "Number[]"
        ],
        "spread": false,
        "optional": false,
        "name": "options.sizes",
        "description": "Structure of an image sizes."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "Checked options."
    },
    "ignore": true
  },
  {
    "__docId__": 102,
    "kind": "function",
    "name": "GetRequiredICOImageSizes",
    "memberof": "src/lib/ico-generator.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/ico-generator.js~GetRequiredICOImageSizes",
    "access": "public",
    "export": true,
    "importPath": "icon-gen/src/lib/ico-generator.js",
    "importStyle": "{GetRequiredICOImageSizes}",
    "description": "Get the size of the required PNG.",
    "lineNumber": 178,
    "return": {
      "nullable": null,
      "types": [
        "Number[]"
      ],
      "spread": false,
      "description": "Sizes."
    },
    "params": []
  },
  {
    "__docId__": 103,
    "kind": "function",
    "name": "GenerateICO",
    "memberof": "src/lib/ico-generator.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/ico-generator.js~GenerateICO",
    "access": "public",
    "export": true,
    "importPath": "icon-gen/src/lib/ico-generator.js",
    "importStyle": "GenerateICO",
    "description": "Generate the ICO file from a PNG images.",
    "lineNumber": 192,
    "params": [
      {
        "nullable": null,
        "types": [
          "ImageInfo[]"
        ],
        "spread": false,
        "optional": false,
        "name": "images",
        "description": "File informations.."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "dir",
        "description": "Output destination the path of directory."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "options.name",
        "description": "Name of an output file."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "options.sizes",
        "description": "Structure of an image sizes."
      },
      {
        "nullable": null,
        "types": [
          "Logger"
        ],
        "spread": false,
        "optional": false,
        "name": "logger",
        "description": "Logger."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise object."
    }
  },
  {
    "__docId__": 104,
    "kind": "file",
    "name": "src/lib/icon-generator.js",
    "content": "import Fs from 'fs'\nimport Path from 'path'\nimport Del from 'del'\nimport MkdirP from 'mkdirp'\nimport GeneratePNG, { GetRequiredPNGImageSizes } from './png-generator.js'\nimport GenerateICO from './ico-generator.js'\nimport GenerateICNS from './icns-generator.js'\nimport GenerateFavicon from './favicon-generator.js'\nimport Util from './util.js'\nimport Logger from './logger.js'\n\n/**\n * Generate an icon = require(the image file infromations.\n * @param {ImageInfo[]} images Image file informations.\n * @param {String} dest Destination directory path.\n * @param {Object} options Options.\n * @param {Logger} logger Logger.\n * @param {Function} cb Callback function.\n */\nconst generateIcon = (images, dest, options, logger, cb) => {\n  if (!(images && 0 < images.length)) {\n    cb(new Error('Targets is empty.'))\n    return\n  }\n\n  const dir = Path.resolve(dest)\n  MkdirP.sync(dir)\n\n  // Select output mode\n  const tasks = []\n  if (options.icns) {\n    tasks.push(GenerateICNS(images, dir, options.icns, logger))\n  }\n\n  if (options.ico) {\n    tasks.push(GenerateICO(images, dir, options.ico, logger))\n  }\n\n  if (options.favicon) {\n    tasks.push(GenerateFavicon(images, dir, options.favicon, logger))\n  }\n\n  Promise.all(tasks)\n    .then((results) => {\n      cb(null, Util.flattenValues(results))\n    })\n    .catch((err) => {\n      cb(err)\n    })\n}\n\n/**\n * Generate an icon from PNG file.\n * @param {String} src Path of the PNG files direcgtory.\n * @param {String} dir Path of the output files directory.\n * @param {Object} options Options.\n * @param {Logger} logger  Logger.\n * @return {Promise} Promise object.\n */\nconst generateIconFromPNG = (src, dir, options, logger) => {\n  return new Promise((resolve, reject) => {\n    const pngDirPath = Path.resolve(src)\n    const destDirPath = Path.resolve(dir)\n    logger.log('Icon generetor from PNG:')\n    logger.log('  src: ' + pngDirPath)\n    logger.log('  dir: ' + destDirPath)\n\n    const images = GetRequiredPNGImageSizes(options)\n      .map((size) => {\n        return Path.join(pngDirPath, size + '.png')\n      })\n      .map((path) => {\n        const size = Number(Path.basename(path, '.png'))\n        return { path, size }\n      })\n\n    let notExistsFile = null\n    images.some((image) => {\n      const stat = Fs.statSync(image.path)\n      if (!(stat && stat.isFile())) {\n        notExistsFile = Path.basename(image.path)\n        return true\n      }\n\n      return false\n    })\n\n    if (notExistsFile) {\n      reject(new Error('\"' + notExistsFile + '\" does not exist.'))\n      return\n    }\n\n    generateIcon(images, dir, options, logger, (err, results) => {\n      return err ? reject(err) : resolve(results)\n    })\n  })\n}\n\n/**\n * Generate an icon from SVG file.\n * @param {String} src Path of the SVG file.\n * @param {String} dir Path of the output files directory.\n * @param {CLIOption} options Options from command line.\n * @param {Logger} logger  Logger.\n * @return {Promise} Promise object.\n */\nconst generateIconFromSVG = (src, dir, options, logger) => {\n  return new Promise((resolve, reject) => {\n    const svgFilePath = Path.resolve(src)\n    const destDirPath = Path.resolve(dir)\n    logger.log('Icon generator from SVG:')\n    logger.log('  src: ' + svgFilePath)\n    logger.log('  dir: ' + destDirPath)\n\n    const workDir = Util.createWorkDir()\n    if (!workDir) {\n      reject(new Error('Failed to create the working directory.'))\n      return\n    }\n\n    GeneratePNG(\n      svgFilePath,\n      workDir,\n      options,\n      (err, images) => {\n        if (err) {\n          Del.sync([workDir], { force: true })\n          reject(err)\n          return\n        }\n\n        generateIcon(images, destDirPath, options, logger, (err2, results) => {\n          Del.sync([workDir], { force: true })\n          return err2 ? reject(err2) : resolve(results)\n        })\n      },\n      logger\n    )\n  })\n}\n\n/**\n * Generate an icon from SVG or PNG file.\n * @param {String} src Path of the SVG file.\n * @param {String} dest Path of the output files directory.\n * @param {Object} options Options.\n * @return {Promise} Promise object.\n */\nconst GenerateIcon = (src, dest, options) => {\n  if (!Fs.existsSync(src)) {\n    return Promise.reject(new Error('Input file or directory is not found.'))\n  }\n\n  const logger = new Logger(options && options.report)\n  if (Fs.statSync(src).isDirectory()) {\n    return generateIconFromPNG(src, dest, options, logger)\n  } else {\n    return generateIconFromSVG(src, dest, options, logger)\n  }\n}\n\nexport default GenerateIcon\n",
    "static": true,
    "longname": "/Users/akabeko/Documents/dev/node/icon-gen/src/lib/icon-generator.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 105,
    "kind": "function",
    "name": "generateIcon",
    "memberof": "src/lib/icon-generator.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/icon-generator.js~generateIcon",
    "access": "public",
    "export": false,
    "importPath": "icon-gen/src/lib/icon-generator.js",
    "importStyle": null,
    "description": "Generate an icon = require(the image file infromations.",
    "lineNumber": 20,
    "params": [
      {
        "nullable": null,
        "types": [
          "ImageInfo[]"
        ],
        "spread": false,
        "optional": false,
        "name": "images",
        "description": "Image file informations."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "dest",
        "description": "Destination directory path."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options."
      },
      {
        "nullable": null,
        "types": [
          "Logger"
        ],
        "spread": false,
        "optional": false,
        "name": "logger",
        "description": "Logger."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "cb",
        "description": "Callback function."
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 106,
    "kind": "function",
    "name": "generateIconFromPNG",
    "memberof": "src/lib/icon-generator.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/icon-generator.js~generateIconFromPNG",
    "access": "public",
    "export": false,
    "importPath": "icon-gen/src/lib/icon-generator.js",
    "importStyle": null,
    "description": "Generate an icon from PNG file.",
    "lineNumber": 60,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "src",
        "description": "Path of the PNG files direcgtory."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "dir",
        "description": "Path of the output files directory."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options."
      },
      {
        "nullable": null,
        "types": [
          "Logger"
        ],
        "spread": false,
        "optional": false,
        "name": "logger",
        "description": "Logger."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise object."
    },
    "ignore": true
  },
  {
    "__docId__": 107,
    "kind": "function",
    "name": "generateIconFromSVG",
    "memberof": "src/lib/icon-generator.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/icon-generator.js~generateIconFromSVG",
    "access": "public",
    "export": false,
    "importPath": "icon-gen/src/lib/icon-generator.js",
    "importStyle": null,
    "description": "Generate an icon from SVG file.",
    "lineNumber": 107,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "src",
        "description": "Path of the SVG file."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "dir",
        "description": "Path of the output files directory."
      },
      {
        "nullable": null,
        "types": [
          "CLIOption"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options from command line."
      },
      {
        "nullable": null,
        "types": [
          "Logger"
        ],
        "spread": false,
        "optional": false,
        "name": "logger",
        "description": "Logger."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise object."
    },
    "ignore": true
  },
  {
    "__docId__": 108,
    "kind": "function",
    "name": "GenerateIcon",
    "memberof": "src/lib/icon-generator.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/icon-generator.js~GenerateIcon",
    "access": "public",
    "export": true,
    "importPath": "icon-gen/src/lib/icon-generator.js",
    "importStyle": "GenerateIcon",
    "description": "Generate an icon from SVG or PNG file.",
    "lineNumber": 149,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "src",
        "description": "Path of the SVG file."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "dest",
        "description": "Path of the output files directory."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise object."
    }
  },
  {
    "__docId__": 109,
    "kind": "file",
    "name": "src/lib/index.js",
    "content": "import GenerateIcon from './icon-generator.js'\n\n/**\n * Generate an icon = require(the SVG file.\n * @param {String} src SVG file path.\n * @param {String} dest Destination directory path.\n * @param {Object} options Options.\n */\nmodule.exports = function(src, dest, options = {}) {\n  if (!src) {\n    return console.error(new Error('\"input\" has not been specified. This parameter is required.'))\n  }\n\n  if (!dest) {\n    return console.error(new Error('\"-o\" or \"--output\" has not been specified. This parameter is required.'))\n  }\n\n  GenerateIcon(src, dest, options)\n}\n",
    "static": true,
    "longname": "/Users/akabeko/Documents/dev/node/icon-gen/src/lib/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 110,
    "kind": "function",
    "name": "exports",
    "memberof": "src/lib/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/index.js~exports",
    "access": "public",
    "export": false,
    "importPath": "icon-gen/src/lib/index.js",
    "importStyle": null,
    "description": "Generate an icon = require(the SVG file.",
    "lineNumber": 9,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "src",
        "description": "SVG file path."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "dest",
        "description": "Destination directory path."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 111,
    "kind": "file",
    "name": "src/lib/logger.js",
    "content": "/**\n * Display the log message for the stdout.\n */\nexport default class Logger {\n  /**\n   * Initialize instance.\n   *\n   * @param {Boolean} available \"true\" to display the report, default is \"false\".\n   */\n  constructor(available) {\n    this._available = available\n  }\n\n  /**\n   * Display a log message for the stdout.\n   *\n   * @param {Array.<Object>} args Message arguments.\n   */\n  log(...args) {\n    if (this._available) {\n      console.log(...args)\n    }\n  }\n\n  /**\n   * Display an error message for the stdout.\n   *\n   * @param {Array.<Object>} args Message arguments.\n   */\n  error(...args) {\n    if (this._available) {\n      console.error(...args)\n    }\n  }\n}\n",
    "static": true,
    "longname": "/Users/akabeko/Documents/dev/node/icon-gen/src/lib/logger.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 112,
    "kind": "class",
    "name": "Logger",
    "memberof": "src/lib/logger.js",
    "static": true,
    "longname": "src/lib/logger.js~Logger",
    "access": "public",
    "export": true,
    "importPath": "icon-gen/src/lib/logger.js",
    "importStyle": "Logger",
    "description": "Display the log message for the stdout.",
    "lineNumber": 4,
    "interface": false
  },
  {
    "__docId__": 113,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/lib/logger.js~Logger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/lib/logger.js~Logger#constructor",
    "access": "public",
    "description": "Initialize instance.",
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "available",
        "description": "\"true\" to display the report, default is \"false\"."
      }
    ]
  },
  {
    "__docId__": 114,
    "kind": "member",
    "name": "_available",
    "memberof": "src/lib/logger.js~Logger",
    "static": false,
    "longname": "src/lib/logger.js~Logger#_available",
    "access": "private",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 115,
    "kind": "method",
    "name": "log",
    "memberof": "src/lib/logger.js~Logger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/lib/logger.js~Logger#log",
    "access": "public",
    "description": "Display a log message for the stdout.",
    "lineNumber": 19,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array.<Object>"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": "Message arguments."
      }
    ],
    "return": null
  },
  {
    "__docId__": 116,
    "kind": "method",
    "name": "error",
    "memberof": "src/lib/logger.js~Logger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/lib/logger.js~Logger#error",
    "access": "public",
    "description": "Display an error message for the stdout.",
    "lineNumber": 30,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array.<Object>"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": "Message arguments."
      }
    ],
    "return": null
  },
  {
    "__docId__": 117,
    "kind": "file",
    "name": "src/lib/png-generator.js",
    "content": "import Fs from 'fs'\nimport Path from 'path'\nimport SVG2PNG from 'svg2png'\nimport { GetRequiredFavoriteImageSizes } from './favicon-generator.js'\nimport { GetRequiredICNSImageSizes } from './icns-generator.js'\nimport { GetRequiredICOImageSizes } from './ico-generator.js'\n\n/**\n * Filter the sizes.\n * @param {Number[]} sizes Original sizes.\n * @param {Number[]} filterSizes Filter sizes. *\n * @return {NUmber[]} Filterd sizes.\n */\nconst filterSizes = (sizes = [], filterSizes = []) => {\n  if (filterSizes.length === 0) {\n    return sizes\n  }\n\n  return sizes.filter((size) => {\n    for (let filterSize of filterSizes) {\n      if (size === filterSize) {\n        return true\n      }\n    }\n\n    return false\n  })\n}\n\n/**\n * Generate the PNG file = require(the SVG data.\n * @param {Buffer} svg SVG data that has been parse by svg2png.\n * @param {Number} size The size (width/height) of the image.\n * @param {String} dir Path of the file output directory.\n * @param {Logger} logger Logger.\n * @return {Promise} Image generation task.\n */\nconst generatePNG = (svg, size, dir, logger) => {\n  return new Promise((resolve, reject) => {\n    if (!(svg && 0 < size && dir)) {\n      reject(new Error('Invalid parameters.'))\n      return\n    }\n\n    const dest = Path.join(dir, size + '.png')\n    logger.log('  Create: ' + dest)\n\n    const buffer = SVG2PNG.sync(svg, { width: size, height: size })\n    if (!buffer) {\n      reject(new Error('Faild to write the image, ' + size + 'x' + size))\n      return\n    }\n\n    Fs.writeFile(dest, buffer, (err) => {\n      if (err) {\n        reject(err)\n        return\n      }\n\n      resolve({ size: size, path: dest })\n    })\n  })\n}\n\n/**\n * Gets the size of the images needed to create an icon.\n * @param {CLIOption} options Options from command line.\n * @return {Number[]} The sizes of the image.\n */\nexport const GetRequiredPNGImageSizes = (options = {}) => {\n  let sizes = []\n  if (options.icns) {\n    sizes = sizes.concat(filterSizes(GetRequiredICNSImageSizes(), options.icns.sizes))\n  }\n\n  if (options.ico) {\n    sizes = sizes.concat(filterSizes(GetRequiredICOImageSizes(), options.ico.sizes))\n  }\n\n  if (options.favicon) {\n    if (options.favicon.sizes) {\n      // Favicon's PNG generates the specified size as it is\n      sizes = sizes.concat(options.favicon.sizes)\n    } else {\n      sizes = sizes.concat(GetRequiredFavoriteImageSizes())\n    }\n  }\n\n  // 'all' mode\n  if (sizes.length === 0) {\n    sizes = GetRequiredFavoriteImageSizes()\n    sizes = sizes.concat(filterSizes(GetRequiredICNSImageSizes(), options.sizes && options.sizes.icns))\n    sizes = sizes.concat(filterSizes(GetRequiredICOImageSizes(), options.sizes && options.sizes.ico))\n  }\n\n  return sizes\n    .filter((value, index, array) => {\n      return array.indexOf(value) === index\n    })\n    .sort((a, b) => {\n      // Always ensure the ascending order\n      return a - b\n    })\n}\n\n/**\n * Generate the PNG files = require(the SVG file.\n * @param {String} src SVG file path.\n * @param {String} dir Output destination The path of directory.\n * @param {CLIOption} options Options from command line.\n * @param {Function} cb Callback function.\n * @param {Logger} logger Logger.\n */\nconst GeneratePNG = (src, dir, options, cb, logger) => {\n  Fs.readFile(src, (err, svg) => {\n    if (err) {\n      cb(err)\n      return\n    }\n\n    logger.log('SVG to PNG:')\n\n    const sizes = GetRequiredPNGImageSizes(options)\n    Promise.all(\n      sizes.map((size) => {\n        return generatePNG(svg, size, dir, logger)\n      })\n    )\n      .then((results) => {\n        cb(null, results)\n      })\n      .catch((err2) => {\n        cb(err2)\n      })\n  })\n}\n\nexport default GeneratePNG\n",
    "static": true,
    "longname": "/Users/akabeko/Documents/dev/node/icon-gen/src/lib/png-generator.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 118,
    "kind": "function",
    "name": "filterSizes",
    "memberof": "src/lib/png-generator.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/png-generator.js~filterSizes",
    "access": "public",
    "export": false,
    "importPath": "icon-gen/src/lib/png-generator.js",
    "importStyle": null,
    "description": "Filter the sizes.",
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number[]"
        ],
        "spread": false,
        "optional": false,
        "name": "sizes",
        "description": "Original sizes."
      },
      {
        "nullable": null,
        "types": [
          "Number[]"
        ],
        "spread": false,
        "optional": false,
        "name": "filterSizes",
        "description": "Filter sizes. *"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "NUmber[]"
      ],
      "spread": false,
      "description": "Filterd sizes."
    },
    "ignore": true
  },
  {
    "__docId__": 119,
    "kind": "function",
    "name": "generatePNG",
    "memberof": "src/lib/png-generator.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/png-generator.js~generatePNG",
    "access": "public",
    "export": false,
    "importPath": "icon-gen/src/lib/png-generator.js",
    "importStyle": null,
    "description": "Generate the PNG file = require(the SVG data.",
    "lineNumber": 38,
    "params": [
      {
        "nullable": null,
        "types": [
          "Buffer"
        ],
        "spread": false,
        "optional": false,
        "name": "svg",
        "description": "SVG data that has been parse by svg2png."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "size",
        "description": "The size (width/height) of the image."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "dir",
        "description": "Path of the file output directory."
      },
      {
        "nullable": null,
        "types": [
          "Logger"
        ],
        "spread": false,
        "optional": false,
        "name": "logger",
        "description": "Logger."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Image generation task."
    },
    "ignore": true
  },
  {
    "__docId__": 120,
    "kind": "function",
    "name": "GetRequiredPNGImageSizes",
    "memberof": "src/lib/png-generator.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/png-generator.js~GetRequiredPNGImageSizes",
    "access": "public",
    "export": true,
    "importPath": "icon-gen/src/lib/png-generator.js",
    "importStyle": "{GetRequiredPNGImageSizes}",
    "description": "Gets the size of the images needed to create an icon.",
    "lineNumber": 70,
    "params": [
      {
        "nullable": null,
        "types": [
          "CLIOption"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options from command line."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number[]"
      ],
      "spread": false,
      "description": "The sizes of the image."
    }
  },
  {
    "__docId__": 121,
    "kind": "function",
    "name": "GeneratePNG",
    "memberof": "src/lib/png-generator.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/png-generator.js~GeneratePNG",
    "access": "public",
    "export": true,
    "importPath": "icon-gen/src/lib/png-generator.js",
    "importStyle": "GeneratePNG",
    "description": "Generate the PNG files = require(the SVG file.",
    "lineNumber": 114,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "src",
        "description": "SVG file path."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "dir",
        "description": "Output destination The path of directory."
      },
      {
        "nullable": null,
        "types": [
          "CLIOption"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options from command line."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "cb",
        "description": "Callback function."
      },
      {
        "nullable": null,
        "types": [
          "Logger"
        ],
        "spread": false,
        "optional": false,
        "name": "logger",
        "description": "Logger."
      }
    ],
    "return": null
  },
  {
    "__docId__": 122,
    "kind": "file",
    "name": "src/lib/rle.js",
    "content": "/**\n * Max length of PackBits literal.\n * @type {Number}\n */\nconst MAX_LITERAL_LENGTH = 127\n\n/**\n * Copies the array to the target array at the specified position and size.\n * @param {Number[]} src Byte array of copy source.\n * @param {Number} srcBegin  Copying start position of source.\n * @param {Number[]} dest Bayte array of copy destination.\n * @param {Number} destBegin Writing start position of destinnation.\n * @param {Number} size Size of copy bytes.\n */\nconst arrayCopy = (src, srcBegin, dest, destBegin, size) => {\n  if (src.length <= srcBegin || src.length < size || dest.length <= destBegin || dest.length < size) {\n    return\n  }\n\n  for (let i = srcBegin, j = destBegin, k = 0; k < size; ++i, ++j, ++k) {\n    dest[j] = src[i]\n  }\n}\n\n/**\n * Convert a 8bit signed value to unsigned value.\n * @param {Number} value 8bit signed value (-127 to 127)\n * @return {Number} Unsigned value (0 to 255).\n */\nconst toUInt8 = (value) => {\n  return value & 0xff\n}\n\n/**\n * Convert a 8bit unsigned value to signed value.\n * @param {Number} value 8bit unsigned value (0 to 255).\n * @return {Number} Signed value (-127 to 127).\n * @see https://github.com/inexorabletash/polyfill/blob/master/typedarray.js\n */\nconst toInt8 = (value) => {\n  return (value << 24) >> 24\n}\n\n/**\n * Convert PackBits literals to resuls.\n *\n * @param {Array.<Number>} literals PackBits literals.\n *\n * @return {Array.<Number>} Converted literals.\n */\nconst packBitsLiteralToResult = (literals) => {\n  return literals.length === 0 ? [] : [toUInt8(literals.length - 1)].concat(literals)\n}\n\n/**\n * Decompress PackBits compressed binary.\n * This method port Geeks with Blogs's code (Apache License v2.0) to Node.\n * @param {Number[]} src Source binary.\n * @return {Number[]} Decompressed binary.\n * @see https://en.wikipedia.org/wiki/PackBits\n * @see http://geekswithblogs.net/rakker/archive/2015/12/14/packbits-in-c.aspx\n */\nexport const UnpackBits = (src) => {\n  const dest = []\n  for (let i = 0, max = src.length; i < max; ++i) {\n    const count = toInt8(toUInt8(src[i]))\n    if (count === -128) {\n      // Do nothing, skip it\n    } else if (0 <= count) {\n      const total = count + 1\n      for (let j = 0; j < total; ++j) {\n        dest.push(toUInt8(src[i + j + 1]))\n      }\n\n      i += total\n    } else {\n      const total = Math.abs(count) + 1\n      for (let j = 0; j < total; ++j) {\n        dest.push(toUInt8(src[i + 1]))\n      }\n\n      ++i\n    }\n  }\n\n  return dest\n}\n\n/**\n * Compress binary with ICNS RLE.\n * @param {Number[]} src Source binary.\n * @return {Number[]} Compressed binary.\n * @see https://github.com/fiji/IO/blob/master/src/main/java/sc/fiji/io/icns/RunLengthEncoding.java\n */\nexport const PackICNS = (src) => {\n  // If it is not redundant, keep the size large enough to increase the size\n  const packedData = new Array(src.length * 2).fill(0)\n\n  let output = 0\n  for (let input = 0; input < src.length; ) {\n    let literalStart = input\n    let currentData = src[input++]\n\n    // Read up to 128 literal bytes\n    // Stop if 3 or more consecutive bytes are equal or EOF is reached\n    let readBytes = 1\n    let repeatedBytes = 0\n    while (input < src.length && readBytes < 128 && repeatedBytes < 3) {\n      const nextData = src[input++]\n      if (nextData === currentData) {\n        if (repeatedBytes === 0) {\n          repeatedBytes = 2\n        } else {\n          repeatedBytes++\n        }\n      } else {\n        repeatedBytes = 0\n      }\n\n      readBytes++\n      currentData = nextData\n    }\n\n    let literalBytes = 0\n    if (repeatedBytes < 3) {\n      literalBytes = readBytes\n      repeatedBytes = 0\n    } else {\n      literalBytes = readBytes - repeatedBytes\n    }\n\n    // Write the literal bytes that were read\n    if (0 < literalBytes) {\n      packedData[output++] = toUInt8(literalBytes - 1)\n      arrayCopy(src, literalStart, packedData, output, literalBytes)\n      output += literalBytes\n    }\n\n    // Read up to 130 consecutive bytes that are equal\n    while (input < src.length && src[input] === currentData && repeatedBytes < 130) {\n      repeatedBytes++\n      input++\n    }\n\n    if (3 <= repeatedBytes) {\n      // Write the repeated bytes if there are 3 or more\n      packedData[output++] = toUInt8(repeatedBytes + 125)\n      packedData[output++] = currentData\n    } else {\n      // Else move back the in pointer to ensure the repeated bytes are included in the next literal string\n      input -= repeatedBytes\n    }\n  }\n\n  // Trim to the actual size\n  const dest = new Array(output).fill(0)\n  arrayCopy(packedData, 0, dest, 0, output)\n\n  return dest\n}\n\n/**\n * Compress binary with PackBits.\n * This method port Geeks with Blogs's code (Apache License v2.0) to Node.\n * @param {Number[]} src Source binary.\n * @return {Number[]} Compressed binary.\n * @see https://en.wikipedia.org/wiki/PackBits\n * @see http://geekswithblogs.net/rakker/archive/2015/12/14/packbits-in-c.aspx\n */\nexport const PackBits = (src) => {\n  if (!(src && src.length && 0 < src.length)) {\n    return []\n  }\n\n  let dest = []\n  let literals = []\n\n  for (let i = 0, max = src.length; i < max; ++i) {\n    const current = toUInt8(src[i])\n    if (i + 1 < max) {\n      const next = toUInt8(src[i + 1])\n      if (current === next) {\n        dest = dest.concat(packBitsLiteralToResult(literals))\n        literals = []\n\n        const maxJ = max <= i + MAX_LITERAL_LENGTH ? max - i - 1 : MAX_LITERAL_LENGTH\n        let hitMax = true\n        let runLength = 1\n\n        for (let j = 2; j <= maxJ; ++j) {\n          const run = src[i + j]\n          if (current !== run) {\n            hitMax = false\n            const count = toUInt8(0 - runLength)\n            i += j - 1\n            dest.push(count)\n            dest.push(current)\n            break\n          }\n\n          ++runLength\n        }\n\n        if (hitMax) {\n          dest.push(toUInt8(0 - maxJ))\n          dest.push(current)\n          i += maxJ\n        }\n      } else {\n        literals.push(current)\n        if (literals.length === MAX_LITERAL_LENGTH) {\n          dest = dest.concat(packBitsLiteralToResult(literals))\n          literals = []\n        }\n      }\n    } else {\n      literals.push(current)\n      dest = dest.concat(packBitsLiteralToResult(literals))\n      literals = []\n    }\n  }\n\n  return dest\n}\n",
    "static": true,
    "longname": "/Users/akabeko/Documents/dev/node/icon-gen/src/lib/rle.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 123,
    "kind": "variable",
    "name": "MAX_LITERAL_LENGTH",
    "memberof": "src/lib/rle.js",
    "static": true,
    "longname": "src/lib/rle.js~MAX_LITERAL_LENGTH",
    "access": "public",
    "export": false,
    "importPath": "icon-gen/src/lib/rle.js",
    "importStyle": null,
    "description": "Max length of PackBits literal.",
    "lineNumber": 5,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 124,
    "kind": "function",
    "name": "arrayCopy",
    "memberof": "src/lib/rle.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/rle.js~arrayCopy",
    "access": "public",
    "export": false,
    "importPath": "icon-gen/src/lib/rle.js",
    "importStyle": null,
    "description": "Copies the array to the target array at the specified position and size.",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number[]"
        ],
        "spread": false,
        "optional": false,
        "name": "src",
        "description": "Byte array of copy source."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "srcBegin",
        "description": "Copying start position of source."
      },
      {
        "nullable": null,
        "types": [
          "Number[]"
        ],
        "spread": false,
        "optional": false,
        "name": "dest",
        "description": "Bayte array of copy destination."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "destBegin",
        "description": "Writing start position of destinnation."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "size",
        "description": "Size of copy bytes."
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 125,
    "kind": "function",
    "name": "toUInt8",
    "memberof": "src/lib/rle.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/rle.js~toUInt8",
    "access": "public",
    "export": false,
    "importPath": "icon-gen/src/lib/rle.js",
    "importStyle": null,
    "description": "Convert a 8bit signed value to unsigned value.",
    "lineNumber": 30,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "8bit signed value (-127 to 127)"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": "Unsigned value (0 to 255)."
    },
    "ignore": true
  },
  {
    "__docId__": 126,
    "kind": "function",
    "name": "toInt8",
    "memberof": "src/lib/rle.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/rle.js~toInt8",
    "access": "public",
    "export": false,
    "importPath": "icon-gen/src/lib/rle.js",
    "importStyle": null,
    "description": "Convert a 8bit unsigned value to signed value.",
    "see": [
      "https://github.com/inexorabletash/polyfill/blob/master/typedarray.js"
    ],
    "lineNumber": 40,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "8bit unsigned value (0 to 255)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": "Signed value (-127 to 127)."
    },
    "ignore": true
  },
  {
    "__docId__": 127,
    "kind": "function",
    "name": "packBitsLiteralToResult",
    "memberof": "src/lib/rle.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/rle.js~packBitsLiteralToResult",
    "access": "public",
    "export": false,
    "importPath": "icon-gen/src/lib/rle.js",
    "importStyle": null,
    "description": "Convert PackBits literals to resuls.",
    "lineNumber": 51,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array.<Number>"
        ],
        "spread": false,
        "optional": false,
        "name": "literals",
        "description": "PackBits literals."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array.<Number>"
      ],
      "spread": false,
      "description": "Converted literals."
    },
    "ignore": true
  },
  {
    "__docId__": 128,
    "kind": "function",
    "name": "UnpackBits",
    "memberof": "src/lib/rle.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/rle.js~UnpackBits",
    "access": "public",
    "export": true,
    "importPath": "icon-gen/src/lib/rle.js",
    "importStyle": "{UnpackBits}",
    "description": "Decompress PackBits compressed binary.\nThis method port Geeks with Blogs's code (Apache License v2.0) to Node.",
    "see": [
      "https://en.wikipedia.org/wiki/PackBits",
      "http://geekswithblogs.net/rakker/archive/2015/12/14/packbits-in-c.aspx"
    ],
    "lineNumber": 63,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number[]"
        ],
        "spread": false,
        "optional": false,
        "name": "src",
        "description": "Source binary."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number[]"
      ],
      "spread": false,
      "description": "Decompressed binary."
    }
  },
  {
    "__docId__": 129,
    "kind": "function",
    "name": "PackICNS",
    "memberof": "src/lib/rle.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/rle.js~PackICNS",
    "access": "public",
    "export": true,
    "importPath": "icon-gen/src/lib/rle.js",
    "importStyle": "{PackICNS}",
    "description": "Compress binary with ICNS RLE.",
    "see": [
      "https://github.com/fiji/IO/blob/master/src/main/java/sc/fiji/io/icns/RunLengthEncoding.java"
    ],
    "lineNumber": 95,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number[]"
        ],
        "spread": false,
        "optional": false,
        "name": "src",
        "description": "Source binary."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number[]"
      ],
      "spread": false,
      "description": "Compressed binary."
    }
  },
  {
    "__docId__": 130,
    "kind": "function",
    "name": "PackBits",
    "memberof": "src/lib/rle.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/rle.js~PackBits",
    "access": "public",
    "export": true,
    "importPath": "icon-gen/src/lib/rle.js",
    "importStyle": "{PackBits}",
    "description": "Compress binary with PackBits.\nThis method port Geeks with Blogs's code (Apache License v2.0) to Node.",
    "see": [
      "https://en.wikipedia.org/wiki/PackBits",
      "http://geekswithblogs.net/rakker/archive/2015/12/14/packbits-in-c.aspx"
    ],
    "lineNumber": 170,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number[]"
        ],
        "spread": false,
        "optional": false,
        "name": "src",
        "description": "Source binary."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number[]"
      ],
      "spread": false,
      "description": "Compressed binary."
    }
  },
  {
    "__docId__": 131,
    "kind": "file",
    "name": "src/lib/util.js",
    "content": "import Fs from 'fs'\nimport Path from 'path'\nimport OS from 'os'\nimport UUID from 'uuid'\n\nexport default class Util {\n  /**\n   * Create the work directory.\n   * @return {String} The path of the created directory, failure is null.\n   */\n  static createWorkDir() {\n    const dir = Path.join(OS.tmpdir(), UUID.v4())\n    Fs.mkdirSync(dir)\n\n    const stat = Fs.statSync(dir)\n    return stat && stat.isDirectory() ? dir : null\n  }\n\n  /**\n   * Delete a files.\n   * @param {String[]} paths File paths.\n   */\n  static deleteFiles(paths) {\n    paths.forEach((path) => {\n      try {\n        const stat = Fs.statSync(path)\n        if (stat && stat.isFile()) {\n          Fs.unlinkSync(path)\n        }\n      } catch (err) {\n        console.error(err)\n      }\n    })\n  }\n\n  /**\n   * Filter by size to the specified image informations.\n   * @param {ImageInfo[]} images Image file informations.\n   * @param {Number[]} sizes  Required sizes.\n   * @return {ImageInfo[]} Filtered image informations.\n   */\n  static filterImagesBySizes(images, sizes) {\n    return images\n      .filter((image) => {\n        return sizes.some((size) => {\n          return image.size === size\n        })\n      })\n      .sort((a, b) => {\n        return a.size - b.size\n      })\n  }\n\n  /**\n   * Convert a values to a flat array.\n   * @param  {String[]|Array[]} values Values (['A', 'B', ['C', 'D']]).\n   * @return {String[]} Flat array (['A', 'B', 'C', 'D']).\n   */\n  static flattenValues(values) {\n    const paths = []\n    values.forEach((value) => {\n      if (!value) {\n        return\n      }\n\n      if (Array.isArray(value)) {\n        value.forEach((path) => {\n          paths.push(path)\n        })\n      } else {\n        paths.push(value)\n      }\n    })\n\n    return paths\n  }\n}\n",
    "static": true,
    "longname": "/Users/akabeko/Documents/dev/node/icon-gen/src/lib/util.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 132,
    "kind": "class",
    "name": "Util",
    "memberof": "src/lib/util.js",
    "static": true,
    "longname": "src/lib/util.js~Util",
    "access": "public",
    "export": true,
    "importPath": "icon-gen/src/lib/util.js",
    "importStyle": "Util",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 133,
    "kind": "method",
    "name": "createWorkDir",
    "memberof": "src/lib/util.js~Util",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/util.js~Util.createWorkDir",
    "access": "public",
    "description": "Create the work directory.",
    "lineNumber": 11,
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": "The path of the created directory, failure is null."
    },
    "params": []
  },
  {
    "__docId__": 134,
    "kind": "method",
    "name": "deleteFiles",
    "memberof": "src/lib/util.js~Util",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/util.js~Util.deleteFiles",
    "access": "public",
    "description": "Delete a files.",
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": false,
        "name": "paths",
        "description": "File paths."
      }
    ],
    "return": null
  },
  {
    "__docId__": 135,
    "kind": "method",
    "name": "filterImagesBySizes",
    "memberof": "src/lib/util.js~Util",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/util.js~Util.filterImagesBySizes",
    "access": "public",
    "description": "Filter by size to the specified image informations.",
    "lineNumber": 42,
    "params": [
      {
        "nullable": null,
        "types": [
          "ImageInfo[]"
        ],
        "spread": false,
        "optional": false,
        "name": "images",
        "description": "Image file informations."
      },
      {
        "nullable": null,
        "types": [
          "Number[]"
        ],
        "spread": false,
        "optional": false,
        "name": "sizes",
        "description": "Required sizes."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ImageInfo[]"
      ],
      "spread": false,
      "description": "Filtered image informations."
    }
  },
  {
    "__docId__": 136,
    "kind": "method",
    "name": "flattenValues",
    "memberof": "src/lib/util.js~Util",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/util.js~Util.flattenValues",
    "access": "public",
    "description": "Convert a values to a flat array.",
    "lineNumber": 59,
    "params": [
      {
        "nullable": null,
        "types": [
          "String[]",
          "Array[]"
        ],
        "spread": false,
        "optional": false,
        "name": "values",
        "description": "Values (['A', 'B', ['C', 'D']])."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String[]"
      ],
      "spread": false,
      "description": "Flat array (['A', 'B', 'C', 'D'])."
    }
  },
  {
    "__docId__": 137,
    "kind": "file",
    "name": "src/typedef.js",
    "content": "/**\n * @external {Buffer} https://nodejs.org/api/buffer.html\n */\n\n/**\n * @external {WritableStream} https://nodejs.org/api/stream.html\n */\n\n/**\n * Image file infromations.\n *\n * @typedef {Object} ImageInfo\n * @property {Number} size Image size (width/height).\n * @property {String} path File path.\n */\n\n/**\n * Information of the icon.\n *\n * @typedef {Object} ICNSIconInfo\n * @property {String} id   Identifier of the icon block.\n * @property {String} mask Identifier of the icon block (PackBits mask).\n * @property {Number} size Image size (width/height).\n */\n\n/**\n * Header information of the ICO file.\n *\n * @typedef {Object} ICOHeader\n * @property {Number} reserved 2 bytes. Reserved. Must always be 0.\n * @property {Number} type     2 bytes. Specifies image type: 1 for icon (.ICO) image, 2 for cursor (.CUR) image. Other values are invalid.\n * @property {Number} counr    2 bytes. Specifies number of images in the file.\n *\n * @see https://en.wikipedia.org/wiki/ICO_%28file_format%29\n */\n\n/**\n * Directory information of the ICO file.\n *\n * @typedef {Object} ICODirectory\n * @property {Number} width    1 bytes. Specifies image width in pixels. Can be any number between 0 and 255. Value 0 means image width is 256 pixels.\n * @property {Number} height   1 bytes. Specifies image height in pixels. Can be any number between 0 and 255. Value 0 means image height is 256 pixels.\n * @property {Number} colors   1 bytes. Specifies number of colors in the color palette. Should be 0 if the image does not use a color palette.\n * @property {Number} reserved 1 bytes. Reserved. Should be 0.\n * @property {Number} planes   2 bytes. In ICO format: Specifies color planes. Should be 0 or 1. In CUR format: Specifies the horizontal coordinates of the hotspot in number ofpixels from the left.\n * @property {Number} bpp        2 bytes. In ICO format: Specifies bits per pixel. In CUR format: Specifies the vertical coordinates of the hotspot in number of pixels from thetop.\n * @property {Number} size     4 bytes. Specifies the size of the image's data in bytes.\n * @property {Number} offset   4 bytes. Specifies the offset of BMP or PNG data from the beginning of the ICO/CUR file.\n *\n * @see https://en.wikipedia.org/wiki/ICO_%28file_format%29\n */\n",
    "static": true,
    "longname": "/Users/akabeko/Documents/dev/node/icon-gen/src/typedef.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 138,
    "kind": "external",
    "name": "Buffer",
    "externalLink": "https://nodejs.org/api/buffer.html",
    "memberof": "src/typedef.js",
    "static": true,
    "longname": "src/typedef.js~Buffer",
    "access": "public",
    "description": ""
  },
  {
    "__docId__": 139,
    "kind": "external",
    "name": "WritableStream",
    "externalLink": "https://nodejs.org/api/stream.html",
    "memberof": "src/typedef.js",
    "static": true,
    "longname": "src/typedef.js~WritableStream",
    "access": "public",
    "description": ""
  },
  {
    "__docId__": 140,
    "kind": "typedef",
    "name": "ImageInfo",
    "memberof": "src/typedef.js",
    "static": true,
    "longname": "src/typedef.js~ImageInfo",
    "access": "public",
    "description": "Image file infromations.",
    "properties": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "size",
        "description": "Image size (width/height)."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": "File path."
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "ImageInfo"
    }
  },
  {
    "__docId__": 141,
    "kind": "typedef",
    "name": "ICNSIconInfo",
    "memberof": "src/typedef.js",
    "static": true,
    "longname": "src/typedef.js~ICNSIconInfo",
    "access": "public",
    "description": "Information of the icon.",
    "properties": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "Identifier of the icon block."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "mask",
        "description": "Identifier of the icon block (PackBits mask)."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "size",
        "description": "Image size (width/height)."
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "ICNSIconInfo"
    }
  },
  {
    "__docId__": 142,
    "kind": "typedef",
    "name": "ICOHeader",
    "memberof": "src/typedef.js",
    "static": true,
    "longname": "src/typedef.js~ICOHeader",
    "access": "public",
    "description": "Header information of the ICO file.",
    "see": [
      "https://en.wikipedia.org/wiki/ICO_%28file_format%29"
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "reserved",
        "description": "2 bytes. Reserved. Must always be 0."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "2 bytes. Specifies image type: 1 for icon (.ICO) image, 2 for cursor (.CUR) image. Other values are invalid."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "counr",
        "description": "2 bytes. Specifies number of images in the file."
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "ICOHeader"
    }
  },
  {
    "__docId__": 143,
    "kind": "typedef",
    "name": "ICODirectory",
    "memberof": "src/typedef.js",
    "static": true,
    "longname": "src/typedef.js~ICODirectory",
    "access": "public",
    "description": "Directory information of the ICO file.",
    "see": [
      "https://en.wikipedia.org/wiki/ICO_%28file_format%29"
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "width",
        "description": "1 bytes. Specifies image width in pixels. Can be any number between 0 and 255. Value 0 means image width is 256 pixels."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "height",
        "description": "1 bytes. Specifies image height in pixels. Can be any number between 0 and 255. Value 0 means image height is 256 pixels."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "colors",
        "description": "1 bytes. Specifies number of colors in the color palette. Should be 0 if the image does not use a color palette."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "reserved",
        "description": "1 bytes. Reserved. Should be 0."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "planes",
        "description": "2 bytes. In ICO format: Specifies color planes. Should be 0 or 1. In CUR format: Specifies the horizontal coordinates of the hotspot in number ofpixels from the left."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "bpp",
        "description": "2 bytes. In ICO format: Specifies bits per pixel. In CUR format: Specifies the vertical coordinates of the hotspot in number of pixels from thetop."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "size",
        "description": "4 bytes. Specifies the size of the image's data in bytes."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "offset",
        "description": "4 bytes. Specifies the offset of BMP or PNG data from the beginning of the ICO/CUR file."
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "ICODirectory"
    }
  },
  {
    "kind": "index",
    "content": "# npm-icon-gen\n\n[![Support Node of LTS](https://img.shields.io/badge/node-LTS-brightgreen.svg)](https://nodejs.org/)\n[![npm version](https://badge.fury.io/js/icon-gen.svg)](https://badge.fury.io/js/icon-gen)\n[![Build Status](https://travis-ci.org/akabekobeko/npm-icon-gen.svg?branch=master)](https://travis-ci.org/akabekobeko/npm-icon-gen)\n[![Document](https://img.shields.io/badge/document-ESDoc-brightgreen.svg)](https://akabekobeko.github.io/npm-icon-gen/)\n[![Standard - JavaScript Style Guide](https://img.shields.io/badge/code_style-standard-brightgreen.svg)](http://standardjs.com/)\n\nGenerate an icon files from the **SVG** or **PNG** files.\n\n## Node.js requirements\n\nThis module depends on [svg2png](https://github.com/domenic/svg2png). Therefore we need **Node v6 or later**. The following is a quotation from `README` of **svg2png**.\n\n> svg2png uses the latest in ES2015 features, and as such requires a recent version of Node.js. Only the 6.x series onward is supported.\n\n## Support formats\n\nSupported the output format of the icon are following.\n\n|Platform|Icon|\n|--:|---|\n|Windows|`app.ico` or specified name.|\n|macOS|`app.icns` or specified name.|\n|Favicon|`favicon.ico` and `favicon-XX.png`.|\n\n## Installation\n\n```\n$ npm install icon-gen\n```\n\n## Usage\n\nSVG and PNG are automatically selected from the `input` path. If the path indicates a file **SVG**, if it is a directory it will be a **PNG** folder.\n\n### SVG\n\nSVG files are rendering to PNG file in **svg2png**. Rendering files is output to a temporary directory of the each OS.\n\nRendering of svg2png is run by [phantomjs](https://www.npmjs.com/package/phantomjs). Please use the PNG directory If the rendering quality there is a problem.\n\n```js\nconst icongen = require('icon-gen');\n\nicongen('./sample.svg', './icons', { report: true })\n.then((results) => {\n  console.log(results)\n})\n.catch((err) => {\n  console.error(err)\n});\n```\n\n### PNG\n\nGenerate an icon files from the directory of PNG files.\n\n```js\nconst icongen = require('icon-gen');\n\nicongen('./images', './icons', , { report: true })\n.then((results) => {\n  console.log(results);\n} )\n.catch((err) => {\n  console.error(err);\n});\n```\n\nRequired PNG files is below. Favicon outputs both the ICO and PNG files (see: [audreyr/favicon-cheat-sheet](https://github.com/audreyr/favicon-cheat-sheet)).\n\n|Name    |Size     |ICO     |ICNS    |Fav ICO |Fav PNG |\n|-------:|--------:|:------:|:------:|:------:|:------:|\n|  16.png|    16x16|&#10004;|&#10004;|&#10004;|        |\n|  24.png|    24x24|&#10004;|        |&#10004;|        |\n|  32.png|    32x32|&#10004;|&#10004;|&#10004;|&#10004;|\n|  48.png|    48x48|&#10004;|        |&#10004;|        |\n|  57.png|    57x57|        |        |        |&#10004;|\n|  64.png|    64x64|&#10004;|&#10004;|&#10004;|        |\n|  72.png|    72x72|        |        |        |&#10004;|\n|  96.png|    96x96|        |        |        |&#10004;|\n| 120.png|  120x120|        |        |        |&#10004;|\n| 128.png|  128x128|&#10004;|&#10004;|        |&#10004;|\n| 144.png|  144x144|        |        |        |&#10004;|\n| 152.png|  152x152|        |        |        |&#10004;|\n| 195.png|  195x195|        |        |        |&#10004;|\n| 228.png|  228x228|        |        |        |&#10004;|\n| 256.png|  256x256|&#10004;|&#10004;|        |        |\n| 512.png|  512x512|        |&#10004;|        |        |\n|1024.png|1024x1024|        |&#10004;|        |        |\n\nTo make it a special size configuration, please specify with `ico`,` icns` and `favicon` options.\n\n## Node API\n\n### icongen\n\n**icongen** is promisify function.\n\n`icongen(src, dest[, options])`\n\n|Name|Type|Description|\n|---|---|---|\n|src |`String`|Path of the **SVG file** or **PNG files directory** that becomes the source.|\n|dest |`String`|Destination directory path.|\n|options|`Object`|see: _Options_.|\n\n_Options:_\n\n```js\nconst options = {\n  report: true,\n  ico: {\n    name: 'app',\n    sizes: [16, 24, 32, 48, 64, 128, 256]\n  },\n  icns: {\n    name: 'app',\n    sizes:  [16, 32, 64, 128, 256, 512, 1024]\n  },\n  favicon: {\n    name: 'favicon-',\n    sizes:  [32, 57, 72, 96, 120, 128, 144, 152, 195, 228],\n    ico: [16, 24, 32, 48, 64]\n  }\n};\n```\n\nIf all image options (`ico`,` icns`, `favicon`) are omitted, all images are output with their default settings.\n\n```js\n// Output an all images with default settings\nconst options = {\n  report: true\n}\n```\n\nIf individual image option is omitted, default setting is used. If there is a format that you do not want to output, specify others and omit that image.\n\n```js\n// Without ICNS\nconst options = {\n  report: true,\n  ico: {}\n  favicon: {}\n}\n```\n\n|Name|Type|Description|\n|---|---|---|\n|report|`Boolean` |Display the process reports. Default is `false`, disable a report.|\n|ico|`Object`|Output setting of ICO file.|\n|icns|`Object`|Output setting of ICNS file.|\n|favicon|`Object`|Output setting of Favicon file (PNG and ICO).|\n\n_`ico`, `icns`_\n\n|Name|Type|Default|Description|\n|---|---|---|---|\n|name|`String`|`app`|Name of an output file.|\n|sizes|`Number[]`|`[Defaults...]`|Structure of an image sizes.|\n\n_`favicon`_\n\n|Name|Type|Default|Description|\n|---|---|---|---|\n|name|`String`|`favicon-`|Prefix of an output PNG files. Start with the alphabet, can use `-` and `_`. This option is for PNG. The name of the ICO file is always `favicon.ico`.|\n|sizes|`Number[]`|`[Defaults...]`|Size structure of PNG files to output.|\n|ico|`Number[]`|`[Defaults...]`|Structure of an image sizes for ICO.|\n\n\n\n## CLI\n\n```\nUsage: icon-gen [OPTIONS]\n\nGenerate an icon from the SVG or PNG file.\nIf '--ico', '--icns', '--favicon' is not specified, everything is output in the standard setting.\n\nOptions:\n-h, --help    Display this text.\n-v, --version Display the version number.\n-i, --input   Path of the SVG file or PNG file directory.\n-o, --output  Path of the output directory.\n-r, --report  Display the process reports.\n              Default is disable.\n--ico         Output ICO file with the specified 'name' and 'sizes'.\n              ex. --ico name=foo sizes=16,32,128\n--icns        Output ICO file with the specified 'name' and 'sizes'.\n              ex. --icns name=bar sizes=32,1024\n--favicon     Output Favicon files with the specified 'ico', 'name' and 'sizes'.\n              'ico' is the size of the ICO file.\n              'name' is the prefix of the PNG file. Start with the alphabet, can use '-' and '_'.\n              'sizes' is the size of the PNG file.\n              ex. '--favicon ico=16,32 name=favicon- sizes=16,32,128'\n\nExamples:\n$ icon-gen -i sample.svg -o ./dist -r\n$ icon-gen -i ./images -o ./dist -r\n$ icon-gen -i sample.svg -o ./dist --ico --icns\n$ icon-gen -i sample.svg -o ./dist --ico --favicon ico=16,32 name=favicon- sizes=16,32,128\n\nSee also:\nhttps://github.com/akabekobeko/npm-icon-gen\n```\n\n# ChangeLog\n\n* [CHANGELOG](CHANGELOG.md)\n\n# License\n\n* [MIT](LICENSE.txt)\n",
    "longname": "/Users/akabeko/Documents/dev/node/icon-gen/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"icon-gen\",\n  \"description\": \"Generate an icon files from the SVG or PNG files\",\n  \"version\": \"2.0.0\",\n  \"author\": \"akabeko (http://akabeko.me/)\",\n  \"license\": \"MIT\",\n  \"homepage\": \"https://github.com/akabekobeko/npm-icon-gen#readme\",\n  \"engines\": {\n    \"node\": \">= 8\"\n  },\n  \"main\": \"dist/lib/index.js\",\n  \"bin\": \"dist/bin/index.js\",\n  \"files\": [\n    \"dist\"\n  ],\n  \"keywords\": [\n    \"Icon\",\n    \"Generator\",\n    \"SVG\",\n    \"CLI\"\n  ],\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/akabekobeko/npm-icon-gen.git\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/akabekobeko/npm-icon-gen/issues\"\n  },\n  \"scripts\": {\n    \"test\": \"mocha --timeout 50000 --require @babel/register src/**/*.test.js\",\n    \"start\": \"npm run watch\",\n    \"esdoc\": \"esdoc\",\n    \"eslint\": \"eslint ./src\",\n    \"build\": \"babel src --out-dir dist --ignore *.test.js,typedef.js\",\n    \"watch\": \"babel src --out-dir dist --ignore *.test.js,typedef.js --watch\",\n    \"prepare\": \"npm run build\"\n  },\n  \"dependencies\": {\n    \"del\": \"^3.0.0\",\n    \"mkdirp\": \"^0.5.1\",\n    \"pngjs-nozlib\": \"^1.0.0\",\n    \"svg2png\": \"4.1.1\",\n    \"uuid\": \"^3.3.2\"\n  },\n  \"devDependencies\": {\n    \"@babel/cli\": \"^7.1.2\",\n    \"@babel/core\": \"^7.1.2\",\n    \"@babel/preset-env\": \"^7.1.0\",\n    \"@babel/register\": \"^7.0.0\",\n    \"babel-preset-power-assert\": \"^3.0.0\",\n    \"esdoc\": \"^1.1.0\",\n    \"esdoc-standard-plugin\": \"^1.0.0\",\n    \"eslint\": \"^5.8.0\",\n    \"eslint-config-prettier\": \"^3.1.0\",\n    \"eslint-config-standard\": \"^12.0.0\",\n    \"eslint-plugin-import\": \"^2.14.0\",\n    \"eslint-plugin-node\": \"^8.0.0\",\n    \"eslint-plugin-prettier\": \"^3.0.0\",\n    \"eslint-plugin-promise\": \"^4.0.1\",\n    \"eslint-plugin-standard\": \"^4.0.0\",\n    \"mocha\": \"^5.2.0\",\n    \"power-assert\": \"^1.6.1\",\n    \"prettier\": \"^1.14.3\",\n    \"rewire\": \"^4.0.1\"\n  }\n}\n",
    "longname": "/Users/akabeko/Documents/dev/node/icon-gen/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  },
  {
    "__docId__": 144,
    "kind": "testFile",
    "name": "src/bin/cli.test.js",
    "content": "import assert from 'assert'\nimport Path from 'path'\nimport Rewire from 'rewire'\n\n/** @test {CLI} */\ndescribe('CLI', () => {\n  const Module = Rewire('./cli.js')\n\n  /** @test {parse} */\n  describe('parse', () => {\n    const parse = Module.__get__('parse')\n\n    it('Empty arguments', () => {\n      const options = parse([])\n      assert(options.help)\n    })\n\n    it('parse: -h --help', () => {\n      let options = parse(['-h'])\n      assert(options.help)\n\n      options = parse(['--help'])\n      assert(options.help)\n    })\n\n    it('-v --version', () => {\n      let options = parse(['-v'])\n      assert(options.version)\n\n      options = parse(['--version'])\n      assert(options.version)\n    })\n\n    it('-i SVGFILE -o DESTDIR', () => {\n      const argv = ['-i', './test/data/sample.svg', '-o', './test']\n      const options = parse(argv)\n\n      let expected = Path.resolve(argv[1])\n      assert(options.input === expected)\n\n      expected = Path.resolve(argv[3])\n      assert(options.output === expected)\n\n      assert(options.report === undefined)\n    })\n\n    it('-i PNGDIR -o DESTDIR -r', () => {\n      const argv = ['-i', './test/data', '-o', './test', '-r']\n      const options = parse(argv)\n\n      let expected = Path.resolve(argv[1])\n      assert(options.input === expected)\n\n      expected = Path.resolve(argv[3])\n      assert(options.output === expected)\n\n      assert(options.report === true)\n    })\n\n    it('Default images', () => {\n      const argv = ['-i', './test/data', '-o', './test']\n      const options = parse(argv)\n\n      assert(options.ico !== undefined)\n      assert(options.icns !== undefined)\n      assert(options.favicon !== undefined)\n    })\n\n    describe('--ico', () => {\n      it('Full options', () => {\n        const argv = ['-i', './test/data', '-o', './test', '--ico', 'name=foo', 'sizes=16,32']\n        const options = parse(argv)\n        const expected = { name: 'foo', sizes: [16, 32] }\n        assert.deepStrictEqual(options.ico, expected)\n      })\n\n      it('name', () => {\n        const argv = ['-i', './test/data', '-o', './test', '--ico', 'name=foo']\n        const options = parse(argv)\n        const expected = { name: 'foo' }\n        assert.deepStrictEqual(options.ico, expected)\n      })\n\n      it('sizes', () => {\n        const argv = ['-i', './test/data', '-o', './test', '--ico', 'sizes=16,32']\n        const options = parse(argv)\n        const expected = { sizes: [16, 32] }\n        assert.deepStrictEqual(options.ico, expected)\n      })\n\n      it('Without options', () => {\n        const argv = ['-i', './test/data', '-o', './test', '--ico']\n        const options = parse(argv)\n        assert(options.ico !== undefined)\n        assert(options.icns === undefined)\n        assert(options.favicon === undefined)\n      })\n    })\n\n    describe('--icns', () => {\n      it('Full options', () => {\n        const argv = ['-i', './test/data', '-o', './test', '--icns', 'name=foo', 'sizes=16,32']\n        const options = parse(argv)\n        const expected = { name: 'foo', sizes: [16, 32] }\n        assert.deepStrictEqual(options.icns, expected)\n      })\n\n      it('name', () => {\n        const argv = ['-i', './test/data', '-o', './test', '--icns', 'name=foo']\n        const options = parse(argv)\n        const expected = { name: 'foo' }\n        assert.deepStrictEqual(options.icns, expected)\n      })\n\n      it('sizes', () => {\n        const argv = ['-i', './test/data', '-o', './test', '--icns', 'sizes=16,32']\n        const options = parse(argv)\n        const expected = { sizes: [16, 32] }\n        assert.deepStrictEqual(options.icns, expected)\n      })\n\n      it('Without options', () => {\n        const argv = ['-i', './test/data', '-o', './test', '--icns']\n        const options = parse(argv)\n        assert(options.ico === undefined)\n        assert(options.icns !== undefined)\n        assert(options.favicon === undefined)\n      })\n    })\n\n    describe('--favicon', () => {\n      it('Full options', () => {\n        const argv = ['-i', './test/data', '-o', './test', '--favicon', 'ico=24,48', 'name=icon-', 'sizes=16,32']\n        const options = parse(argv)\n        const expected = { ico: [24, 48], name: 'icon-', sizes: [16, 32] }\n        assert.deepStrictEqual(options.favicon, expected)\n      })\n\n      it('ico', () => {\n        const argv = ['-i', './test/data', '-o', './test', '--favicon', 'ico=24,48']\n        const options = parse(argv)\n        const expected = { ico: [24, 48] }\n        assert.deepStrictEqual(options.favicon, expected)\n      })\n\n      it('name', () => {\n        const argv = ['-i', './test/data', '-o', './test', '--favicon', 'name=icon-']\n        const options = parse(argv)\n        const expected = { name: 'icon-' }\n        assert.deepStrictEqual(options.favicon, expected)\n      })\n\n      it('sizes', () => {\n        const argv = ['-i', './test/data', '-o', './test', '--favicon', 'sizes=16,32']\n        const options = parse(argv)\n        const expected = { sizes: [16, 32] }\n        assert.deepStrictEqual(options.favicon, expected)\n      })\n\n      it('Without options', () => {\n        const argv = ['-i', './test/data', '-o', './test', '--favicon']\n        const options = parse(argv)\n        assert(options.ico === undefined)\n        assert(options.icns === undefined)\n        assert(options.favicon !== undefined)\n      })\n    })\n  })\n\n  describe('parseArgOption', () => {\n    const parseArgOption = Module.__get__('parseArgOption')\n\n    it('key=value', () => {\n      const actual = parseArgOption('name=foo')\n      const expected = { name: 'name', value: 'foo' }\n      assert.deepStrictEqual(actual, expected)\n    })\n\n    it('value', () => {\n      const actual = parseArgOption('value')\n      const expected = 'value'\n      assert(actual === expected)\n    })\n  })\n})\n",
    "static": true,
    "longname": "/Users/akabeko/Documents/dev/node/icon-gen/src/bin/cli.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 145,
    "kind": "test",
    "name": "describe0",
    "testId": 0,
    "memberof": "src/bin/cli.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "src/bin/cli.test.js~describe0",
    "access": null,
    "description": "CLI",
    "lineNumber": 6,
    "testTargets": [
      "CLI"
    ]
  },
  {
    "__docId__": 146,
    "kind": "test",
    "name": "describe1",
    "testId": 1,
    "memberof": "src/bin/cli.test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "src/bin/cli.test.js~describe0.describe1",
    "access": null,
    "description": "parse",
    "lineNumber": 10,
    "testTargets": [
      "parse"
    ]
  },
  {
    "__docId__": 147,
    "kind": "test",
    "name": "it2",
    "testId": 2,
    "memberof": "src/bin/cli.test.js~describe0.describe1",
    "testDepth": 2,
    "static": true,
    "longname": "src/bin/cli.test.js~describe0.describe1.it2",
    "access": null,
    "description": "Empty arguments",
    "lineNumber": 13
  },
  {
    "__docId__": 148,
    "kind": "test",
    "name": "it3",
    "testId": 3,
    "memberof": "src/bin/cli.test.js~describe0.describe1",
    "testDepth": 2,
    "static": true,
    "longname": "src/bin/cli.test.js~describe0.describe1.it3",
    "access": null,
    "description": "parse: -h --help",
    "lineNumber": 18
  },
  {
    "__docId__": 149,
    "kind": "test",
    "name": "it4",
    "testId": 4,
    "memberof": "src/bin/cli.test.js~describe0.describe1",
    "testDepth": 2,
    "static": true,
    "longname": "src/bin/cli.test.js~describe0.describe1.it4",
    "access": null,
    "description": "-v --version",
    "lineNumber": 26
  },
  {
    "__docId__": 150,
    "kind": "test",
    "name": "it5",
    "testId": 5,
    "memberof": "src/bin/cli.test.js~describe0.describe1",
    "testDepth": 2,
    "static": true,
    "longname": "src/bin/cli.test.js~describe0.describe1.it5",
    "access": null,
    "description": "-i SVGFILE -o DESTDIR",
    "lineNumber": 34
  },
  {
    "__docId__": 151,
    "kind": "test",
    "name": "it6",
    "testId": 6,
    "memberof": "src/bin/cli.test.js~describe0.describe1",
    "testDepth": 2,
    "static": true,
    "longname": "src/bin/cli.test.js~describe0.describe1.it6",
    "access": null,
    "description": "-i PNGDIR -o DESTDIR -r",
    "lineNumber": 47
  },
  {
    "__docId__": 152,
    "kind": "test",
    "name": "it7",
    "testId": 7,
    "memberof": "src/bin/cli.test.js~describe0.describe1",
    "testDepth": 2,
    "static": true,
    "longname": "src/bin/cli.test.js~describe0.describe1.it7",
    "access": null,
    "description": "Default images",
    "lineNumber": 60
  },
  {
    "__docId__": 153,
    "kind": "test",
    "name": "describe8",
    "testId": 8,
    "memberof": "src/bin/cli.test.js~describe0.describe1",
    "testDepth": 2,
    "static": true,
    "longname": "src/bin/cli.test.js~describe0.describe1.describe8",
    "access": null,
    "description": "--ico",
    "lineNumber": 69
  },
  {
    "__docId__": 154,
    "kind": "test",
    "name": "it9",
    "testId": 9,
    "memberof": "src/bin/cli.test.js~describe0.describe1.describe8",
    "testDepth": 3,
    "static": true,
    "longname": "src/bin/cli.test.js~describe0.describe1.describe8.it9",
    "access": null,
    "description": "Full options",
    "lineNumber": 70
  },
  {
    "__docId__": 155,
    "kind": "test",
    "name": "it10",
    "testId": 10,
    "memberof": "src/bin/cli.test.js~describe0.describe1.describe8",
    "testDepth": 3,
    "static": true,
    "longname": "src/bin/cli.test.js~describe0.describe1.describe8.it10",
    "access": null,
    "description": "name",
    "lineNumber": 77
  },
  {
    "__docId__": 156,
    "kind": "test",
    "name": "it11",
    "testId": 11,
    "memberof": "src/bin/cli.test.js~describe0.describe1.describe8",
    "testDepth": 3,
    "static": true,
    "longname": "src/bin/cli.test.js~describe0.describe1.describe8.it11",
    "access": null,
    "description": "sizes",
    "lineNumber": 84
  },
  {
    "__docId__": 157,
    "kind": "test",
    "name": "it12",
    "testId": 12,
    "memberof": "src/bin/cli.test.js~describe0.describe1.describe8",
    "testDepth": 3,
    "static": true,
    "longname": "src/bin/cli.test.js~describe0.describe1.describe8.it12",
    "access": null,
    "description": "Without options",
    "lineNumber": 91
  },
  {
    "__docId__": 158,
    "kind": "test",
    "name": "describe13",
    "testId": 13,
    "memberof": "src/bin/cli.test.js~describe0.describe1",
    "testDepth": 2,
    "static": true,
    "longname": "src/bin/cli.test.js~describe0.describe1.describe13",
    "access": null,
    "description": "--icns",
    "lineNumber": 100
  },
  {
    "__docId__": 159,
    "kind": "test",
    "name": "it14",
    "testId": 14,
    "memberof": "src/bin/cli.test.js~describe0.describe1.describe13",
    "testDepth": 3,
    "static": true,
    "longname": "src/bin/cli.test.js~describe0.describe1.describe13.it14",
    "access": null,
    "description": "Full options",
    "lineNumber": 101
  },
  {
    "__docId__": 160,
    "kind": "test",
    "name": "it15",
    "testId": 15,
    "memberof": "src/bin/cli.test.js~describe0.describe1.describe13",
    "testDepth": 3,
    "static": true,
    "longname": "src/bin/cli.test.js~describe0.describe1.describe13.it15",
    "access": null,
    "description": "name",
    "lineNumber": 108
  },
  {
    "__docId__": 161,
    "kind": "test",
    "name": "it16",
    "testId": 16,
    "memberof": "src/bin/cli.test.js~describe0.describe1.describe13",
    "testDepth": 3,
    "static": true,
    "longname": "src/bin/cli.test.js~describe0.describe1.describe13.it16",
    "access": null,
    "description": "sizes",
    "lineNumber": 115
  },
  {
    "__docId__": 162,
    "kind": "test",
    "name": "it17",
    "testId": 17,
    "memberof": "src/bin/cli.test.js~describe0.describe1.describe13",
    "testDepth": 3,
    "static": true,
    "longname": "src/bin/cli.test.js~describe0.describe1.describe13.it17",
    "access": null,
    "description": "Without options",
    "lineNumber": 122
  },
  {
    "__docId__": 163,
    "kind": "test",
    "name": "describe18",
    "testId": 18,
    "memberof": "src/bin/cli.test.js~describe0.describe1",
    "testDepth": 2,
    "static": true,
    "longname": "src/bin/cli.test.js~describe0.describe1.describe18",
    "access": null,
    "description": "--favicon",
    "lineNumber": 131
  },
  {
    "__docId__": 164,
    "kind": "test",
    "name": "it19",
    "testId": 19,
    "memberof": "src/bin/cli.test.js~describe0.describe1.describe18",
    "testDepth": 3,
    "static": true,
    "longname": "src/bin/cli.test.js~describe0.describe1.describe18.it19",
    "access": null,
    "description": "Full options",
    "lineNumber": 132
  },
  {
    "__docId__": 165,
    "kind": "test",
    "name": "it20",
    "testId": 20,
    "memberof": "src/bin/cli.test.js~describe0.describe1.describe18",
    "testDepth": 3,
    "static": true,
    "longname": "src/bin/cli.test.js~describe0.describe1.describe18.it20",
    "access": null,
    "description": "ico",
    "lineNumber": 139
  },
  {
    "__docId__": 166,
    "kind": "test",
    "name": "it21",
    "testId": 21,
    "memberof": "src/bin/cli.test.js~describe0.describe1.describe18",
    "testDepth": 3,
    "static": true,
    "longname": "src/bin/cli.test.js~describe0.describe1.describe18.it21",
    "access": null,
    "description": "name",
    "lineNumber": 146
  },
  {
    "__docId__": 167,
    "kind": "test",
    "name": "it22",
    "testId": 22,
    "memberof": "src/bin/cli.test.js~describe0.describe1.describe18",
    "testDepth": 3,
    "static": true,
    "longname": "src/bin/cli.test.js~describe0.describe1.describe18.it22",
    "access": null,
    "description": "sizes",
    "lineNumber": 153
  },
  {
    "__docId__": 168,
    "kind": "test",
    "name": "it23",
    "testId": 23,
    "memberof": "src/bin/cli.test.js~describe0.describe1.describe18",
    "testDepth": 3,
    "static": true,
    "longname": "src/bin/cli.test.js~describe0.describe1.describe18.it23",
    "access": null,
    "description": "Without options",
    "lineNumber": 160
  },
  {
    "__docId__": 169,
    "kind": "test",
    "name": "describe24",
    "testId": 24,
    "memberof": "src/bin/cli.test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "src/bin/cli.test.js~describe0.describe24",
    "access": null,
    "description": "parseArgOption",
    "lineNumber": 170
  },
  {
    "__docId__": 170,
    "kind": "test",
    "name": "it25",
    "testId": 25,
    "memberof": "src/bin/cli.test.js~describe0.describe24",
    "testDepth": 2,
    "static": true,
    "longname": "src/bin/cli.test.js~describe0.describe24.it25",
    "access": null,
    "description": "key=value",
    "lineNumber": 173
  },
  {
    "__docId__": 171,
    "kind": "test",
    "name": "it26",
    "testId": 26,
    "memberof": "src/bin/cli.test.js~describe0.describe24",
    "testDepth": 2,
    "static": true,
    "longname": "src/bin/cli.test.js~describe0.describe24.it26",
    "access": null,
    "description": "value",
    "lineNumber": 179
  },
  {
    "__docId__": 172,
    "kind": "testFile",
    "name": "src/lib/favicon-generator.test.js",
    "content": "import assert from 'assert'\nimport Fs from 'fs'\nimport Path from 'path'\nimport Util from './util.js'\nimport Logger from '../lib/logger.js'\nimport GenerateFavicon, { GetRequiredFavoriteImageSizes } from './favicon-generator.js'\nimport Rewire from 'rewire'\n\n/** @test {FaviconGenerator} */\ndescribe('FaviconGenerator', () => {\n  const Module = Rewire('./favicon-generator.js')\n\n  /** @test {GetRequiredFavoriteImageSizes} */\n  it('GetRequiredFavoriteImageSizes', () => {\n    const images = GetRequiredFavoriteImageSizes().map((size) => {\n      const path = Path.join('./examples/data', size + '.png')\n      return { size: size, path: path }\n    })\n\n    return GenerateFavicon(images, './examples/data', {}, new Logger()).then((results) => {\n      assert(results.length === 11)\n      Util.deleteFiles(results)\n    })\n  })\n\n  /** @test {generateICO} */\n  it('generateICO', () => {\n    const sizes = Module.__get__('REQUIRED_ICO_IMAGE_SIZES')\n    const generateICO = Module.__get__('generateICO')\n    const images = sizes.map((size) => {\n      const path = Path.join('./examples/data', size + '.png')\n      return { size: size, path: path }\n    })\n\n    return generateICO(images, './examples/data', sizes, new Logger()).then((result) => {\n      assert(Path.basename(result) === 'favicon.ico')\n      Fs.unlinkSync(result)\n    })\n  })\n\n  /** @test {generatePNG} */\n  it('generatePNG', () => {\n    const generatePNG = Module.__get__('generatePNG')\n    const images = GetRequiredFavoriteImageSizes().map((size) => {\n      const path = Path.join('./examples/data', size + '.png')\n      return { size: size, path: path }\n    })\n\n    const sizes = Module.__get__('REQUIRED_PNG_IMAGE_SIZES')\n    return generatePNG(images, './examples/data', 'favicon-', sizes, new Logger()).then((results) => {\n      assert(results.length === 10)\n      Util.deleteFiles(results)\n    })\n  })\n})\n",
    "static": true,
    "longname": "/Users/akabeko/Documents/dev/node/icon-gen/src/lib/favicon-generator.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 173,
    "kind": "test",
    "name": "describe27",
    "testId": 27,
    "memberof": "src/lib/favicon-generator.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "src/lib/favicon-generator.test.js~describe27",
    "access": null,
    "description": "FaviconGenerator",
    "lineNumber": 10,
    "testTargets": [
      "FaviconGenerator"
    ]
  },
  {
    "__docId__": 174,
    "kind": "test",
    "name": "it28",
    "testId": 28,
    "memberof": "src/lib/favicon-generator.test.js~describe27",
    "testDepth": 1,
    "static": true,
    "longname": "src/lib/favicon-generator.test.js~describe27.it28",
    "access": null,
    "description": "GetRequiredFavoriteImageSizes",
    "lineNumber": 14,
    "testTargets": [
      "GetRequiredFavoriteImageSizes"
    ]
  },
  {
    "__docId__": 175,
    "kind": "test",
    "name": "it29",
    "testId": 29,
    "memberof": "src/lib/favicon-generator.test.js~describe27",
    "testDepth": 1,
    "static": true,
    "longname": "src/lib/favicon-generator.test.js~describe27.it29",
    "access": null,
    "description": "generateICO",
    "lineNumber": 27,
    "testTargets": [
      "generateICO"
    ]
  },
  {
    "__docId__": 176,
    "kind": "test",
    "name": "it30",
    "testId": 30,
    "memberof": "src/lib/favicon-generator.test.js~describe27",
    "testDepth": 1,
    "static": true,
    "longname": "src/lib/favicon-generator.test.js~describe27.it30",
    "access": null,
    "description": "generatePNG",
    "lineNumber": 42,
    "testTargets": [
      "generatePNG"
    ]
  },
  {
    "__docId__": 177,
    "kind": "testFile",
    "name": "src/lib/icns-generator.test.js",
    "content": "import assert from 'assert'\nimport Fs from 'fs'\nimport Path from 'path'\nimport Logger from './logger.js'\nimport GenerateICNS, { GetRequiredICNSImageSizes } from './icns-generator.js'\nimport Rewire from 'rewire'\n\n/** @test {ICNSGenerator} */\ndescribe('ICNSGenerator', () => {\n  const Module = Rewire('./icns-generator.js')\n\n  /** @test {GenerateICNS} */\n  it('generate', () => {\n    const images = GetRequiredICNSImageSizes().map((size) => {\n      const path = Path.join('./examples/data', size + '.png')\n      return { size: size, path: path }\n    })\n\n    return GenerateICNS(images, './examples/data', {}, new Logger()).then((result) => {\n      assert(result)\n      Fs.unlinkSync(result)\n    })\n  })\n\n  /** @test {createFileHeader} */\n  it('createFileHeader', () => {\n    const createFileHeader = Module.__get__('createFileHeader')\n    const header = createFileHeader(401)\n\n    // In ASCII \"icns\"\n    assert(header.readUInt8(0) === 0x69)\n    assert(header.readUInt8(1) === 0x63)\n    assert(header.readUInt8(2) === 0x6e)\n    assert(header.readUInt8(3) === 0x73)\n\n    // File size\n    assert(header.readUInt32BE(4) === 401)\n  })\n\n  /** @test {createIconHeader} */\n  it('createIconHeader', () => {\n    const createIconHeader = Module.__get__('createIconHeader')\n    const header = createIconHeader(`ic07`, 713)\n\n    // In ASCII \"ic07\"\n    assert(header.readUInt8(0) === 0x69)\n    assert(header.readUInt8(1) === 0x63)\n    assert(header.readUInt8(2) === 0x30)\n    assert(header.readUInt8(3) === 0x37)\n\n    // Image size (specified size + header size)\n    const size = 713 + 8\n    assert(header.readUInt32BE(4) === size)\n  })\n\n  /*\n  it('DebugUnpackIconBlocks', () => {\n    const DebugUnpackIconBlocks = Module.__get__('DebugUnpackIconBlocks')\n    return DebugUnpackIconBlocks('./examples/data/app.icns', './examples/data')\n      .then(() => {\n        assert(true)\n      })\n      .catch((err) => {\n        assert(!err)\n      })\n  })\n  */\n})\n",
    "static": true,
    "longname": "/Users/akabeko/Documents/dev/node/icon-gen/src/lib/icns-generator.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 178,
    "kind": "test",
    "name": "describe31",
    "testId": 31,
    "memberof": "src/lib/icns-generator.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "src/lib/icns-generator.test.js~describe31",
    "access": null,
    "description": "ICNSGenerator",
    "lineNumber": 9,
    "testTargets": [
      "ICNSGenerator"
    ]
  },
  {
    "__docId__": 179,
    "kind": "test",
    "name": "it32",
    "testId": 32,
    "memberof": "src/lib/icns-generator.test.js~describe31",
    "testDepth": 1,
    "static": true,
    "longname": "src/lib/icns-generator.test.js~describe31.it32",
    "access": null,
    "description": "generate",
    "lineNumber": 13,
    "testTargets": [
      "GenerateICNS"
    ]
  },
  {
    "__docId__": 180,
    "kind": "test",
    "name": "it33",
    "testId": 33,
    "memberof": "src/lib/icns-generator.test.js~describe31",
    "testDepth": 1,
    "static": true,
    "longname": "src/lib/icns-generator.test.js~describe31.it33",
    "access": null,
    "description": "createFileHeader",
    "lineNumber": 26,
    "testTargets": [
      "createFileHeader"
    ]
  },
  {
    "__docId__": 181,
    "kind": "test",
    "name": "it34",
    "testId": 34,
    "memberof": "src/lib/icns-generator.test.js~describe31",
    "testDepth": 1,
    "static": true,
    "longname": "src/lib/icns-generator.test.js~describe31.it34",
    "access": null,
    "description": "createIconHeader",
    "lineNumber": 41,
    "testTargets": [
      "createIconHeader"
    ]
  },
  {
    "__docId__": 182,
    "kind": "testFile",
    "name": "src/lib/ico-generator.test.js",
    "content": "import assert from 'assert'\nimport Fs from 'fs'\nimport Path from 'path'\nimport Logger from './logger.js'\nimport GenerateICO, { GetRequiredICOImageSizes } from './ico-generator.js'\nimport Rewire from 'rewire'\n\n/** @test {ICOGenerator} */\ndescribe('ICOGenerator', () => {\n  const Module = Rewire('./ico-generator.js')\n\n  // Private constants\n  const HEADER_SIZE = 6\n  const DIRECTORY_SIZE = 16\n  const BITMAPINFOHEADER_SIZE = 40\n  const BI_RGB = 0\n\n  /** @test {GenerateICO} */\n  it('generate', () => {\n    const targets = GetRequiredICOImageSizes().map((size) => {\n      const path = Path.join('./examples/data', size + '.png')\n      return { size: size, path: path, stat: Fs.statSync(path) }\n    })\n\n    GenerateICO(targets, './examples/data', {}, new Logger()).then((result) => {\n      assert(result)\n      Fs.unlinkSync(result)\n    })\n  })\n\n  /** @test {createFileHeader} */\n  it('createFileHeader', () => {\n    const createFileHeader = Module.__get__('createFileHeader')\n    const count = 7\n    const b = createFileHeader(count)\n\n    assert(b.readUInt16LE(0) === 0)\n    assert(b.readUInt16LE(2) === 1)\n    assert(b.readUInt16LE(4) === count)\n  })\n\n  /** @test {createDirectory} */\n  it('createDirectory', () => {\n    const createDirectory = Module.__get__('createDirectory')\n    const png = {\n      width: 16,\n      height: 16,\n      bpp: 4,\n      data: {\n        length: 1024\n      }\n    }\n\n    const offset = HEADER_SIZE + DIRECTORY_SIZE\n    const b = createDirectory(png, offset)\n\n    assert(b.readUInt8(0) === png.width)\n    assert(b.readUInt8(1) === png.height)\n    assert(b.readUInt8(2) === 0)\n    assert(b.readUInt8(3) === 0)\n    assert(b.readUInt16LE(4) === 1)\n    assert(b.readUInt16LE(6) === png.bpp * 8)\n    assert(b.readUInt32LE(8) === png.data.length + BITMAPINFOHEADER_SIZE)\n    assert(b.readUInt32LE(12) === offset)\n  })\n\n  /** @test {createBitmapInfoHeader} */\n  it('createBitmapInfoHeader', () => {\n    const createBitmapInfoHeader = Module.__get__('createBitmapInfoHeader')\n    const png = {\n      width: 16,\n      height: 16,\n      bpp: 4,\n      data: {\n        length: 1024\n      }\n    }\n\n    const b = createBitmapInfoHeader(png, BI_RGB)\n    assert(b.readUInt32LE(0) === BITMAPINFOHEADER_SIZE)\n    assert(b.readInt32LE(4) === png.width)\n    assert(b.readInt32LE(8) === png.height * 2)\n    assert(b.readUInt16LE(12) === 1)\n    assert(b.readUInt16LE(14) === png.bpp * 8)\n    assert(b.readUInt32LE(16) === BI_RGB)\n    assert(b.readUInt32LE(20) === png.data.length)\n    assert(b.readInt32LE(24) === 0)\n    assert(b.readInt32LE(28) === 0)\n    assert(b.readUInt32LE(32) === 0)\n    assert(b.readUInt32LE(36) === 0)\n  })\n})\n",
    "static": true,
    "longname": "/Users/akabeko/Documents/dev/node/icon-gen/src/lib/ico-generator.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 183,
    "kind": "test",
    "name": "describe35",
    "testId": 35,
    "memberof": "src/lib/ico-generator.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "src/lib/ico-generator.test.js~describe35",
    "access": null,
    "description": "ICOGenerator",
    "lineNumber": 9,
    "testTargets": [
      "ICOGenerator"
    ]
  },
  {
    "__docId__": 184,
    "kind": "test",
    "name": "it36",
    "testId": 36,
    "memberof": "src/lib/ico-generator.test.js~describe35",
    "testDepth": 1,
    "static": true,
    "longname": "src/lib/ico-generator.test.js~describe35.it36",
    "access": null,
    "description": "generate",
    "lineNumber": 19,
    "testTargets": [
      "GenerateICO"
    ]
  },
  {
    "__docId__": 185,
    "kind": "test",
    "name": "it37",
    "testId": 37,
    "memberof": "src/lib/ico-generator.test.js~describe35",
    "testDepth": 1,
    "static": true,
    "longname": "src/lib/ico-generator.test.js~describe35.it37",
    "access": null,
    "description": "createFileHeader",
    "lineNumber": 32,
    "testTargets": [
      "createFileHeader"
    ]
  },
  {
    "__docId__": 186,
    "kind": "test",
    "name": "it38",
    "testId": 38,
    "memberof": "src/lib/ico-generator.test.js~describe35",
    "testDepth": 1,
    "static": true,
    "longname": "src/lib/ico-generator.test.js~describe35.it38",
    "access": null,
    "description": "createDirectory",
    "lineNumber": 43,
    "testTargets": [
      "createDirectory"
    ]
  },
  {
    "__docId__": 187,
    "kind": "test",
    "name": "it39",
    "testId": 39,
    "memberof": "src/lib/ico-generator.test.js~describe35",
    "testDepth": 1,
    "static": true,
    "longname": "src/lib/ico-generator.test.js~describe35.it39",
    "access": null,
    "description": "createBitmapInfoHeader",
    "lineNumber": 68,
    "testTargets": [
      "createBitmapInfoHeader"
    ]
  },
  {
    "__docId__": 188,
    "kind": "testFile",
    "name": "src/lib/icon-generator.test.js",
    "content": "import assert from 'assert'\nimport Util from './util.js'\nimport Logger from './logger.js'\nimport Rewire from 'rewire'\n\n/** @test {IconGenerator} */\ndescribe('IconGenerator', () => {\n  const Module = Rewire('./icon-generator.js')\n\n  /** @test {generateIconFromPNG} */\n  it('generateIconFromPNG', () => {\n    const generateIconFromPNG = Module.__get__('generateIconFromPNG')\n    const options = { icns: {}, ico: {}, favicon: {} }\n    return generateIconFromPNG('./examples/data', './examples/data', options, new Logger()).then((results) => {\n      assert(0 < results.length)\n      Util.deleteFiles(results)\n    })\n  })\n})\n",
    "static": true,
    "longname": "/Users/akabeko/Documents/dev/node/icon-gen/src/lib/icon-generator.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 189,
    "kind": "test",
    "name": "describe40",
    "testId": 40,
    "memberof": "src/lib/icon-generator.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "src/lib/icon-generator.test.js~describe40",
    "access": null,
    "description": "IconGenerator",
    "lineNumber": 7,
    "testTargets": [
      "IconGenerator"
    ]
  },
  {
    "__docId__": 190,
    "kind": "test",
    "name": "it41",
    "testId": 41,
    "memberof": "src/lib/icon-generator.test.js~describe40",
    "testDepth": 1,
    "static": true,
    "longname": "src/lib/icon-generator.test.js~describe40.it41",
    "access": null,
    "description": "generateIconFromPNG",
    "lineNumber": 11,
    "testTargets": [
      "generateIconFromPNG"
    ]
  },
  {
    "__docId__": 191,
    "kind": "testFile",
    "name": "src/lib/png-generator.test.js",
    "content": "import assert from 'assert'\nimport Fs from 'fs'\nimport Del from 'del'\nimport Logger from './logger.js'\nimport { GetRequiredPNGImageSizes } from './png-generator.js'\nimport { GetRequiredFavoriteImageSizes } from './favicon-generator.js'\nimport { GetRequiredICNSImageSizes } from './icns-generator.js'\nimport { GetRequiredICOImageSizes } from './ico-generator.js'\nimport Util from './util.js'\nimport Rewire from 'rewire'\n\n/** @test {PNGGenerator} */\ndescribe('PNGGenerator', () => {\n  const Module = Rewire('./png-generator.js')\n\n  /** @test {GetRequiredPNGImageSizes} */\n  describe('GetRequiredPNGImageSizes', () => {\n    it('All', () => {\n      let actual = GetRequiredPNGImageSizes()\n      let expected = [16, 24, 32, 48, 57, 64, 72, 96, 120, 128, 144, 152, 195, 228, 256, 512, 1024]\n      assert.deepStrictEqual(actual, expected)\n    })\n\n    it('All with filter', () => {\n      let actual = GetRequiredPNGImageSizes({ ico: { sizes: [256] }, icns: { sizes: [512] }, favicon: {} })\n      let expected = [16, 24, 32, 48, 57, 64, 72, 96, 120, 128, 144, 152, 195, 228, 256, 512]\n      assert.deepStrictEqual(actual, expected)\n    })\n\n    it('ICO', () => {\n      let actual = GetRequiredPNGImageSizes({ ico: {} })\n      let expected = GetRequiredICOImageSizes()\n      assert.deepStrictEqual(actual, expected)\n    })\n\n    it('ICO with filter', () => {\n      let actual = GetRequiredPNGImageSizes({ ico: { sizes: [16, 32, 64] } })\n      let expected = [16, 32, 64]\n      assert.deepStrictEqual(actual, expected)\n    })\n\n    it('ICNS', () => {\n      let actual = GetRequiredPNGImageSizes({ icns: {} })\n      let expected = GetRequiredICNSImageSizes()\n      assert.deepStrictEqual(actual, expected)\n    })\n\n    it('ICNS with filter', () => {\n      let actual = GetRequiredPNGImageSizes({ icns: { sizes: [16, 1024] } })\n      let expected = [16, 1024]\n      assert.deepStrictEqual(actual, expected)\n    })\n\n    it('Favicon', () => {\n      let actual = GetRequiredPNGImageSizes({ favicon: {} })\n      let expected = GetRequiredFavoriteImageSizes()\n      assert.deepStrictEqual(actual, expected)\n    })\n  })\n\n  /** @test {generatePNG} */\n  it('generetePNG', () => {\n    const generatePNG = Module.__get__('generatePNG')\n    const svg = Fs.readFileSync('./examples/data/sample.svg')\n    assert(svg)\n\n    const dir = Util.createWorkDir()\n    assert(dir)\n\n    const size = 16\n    return generatePNG(svg, size, dir, new Logger())\n      .then((result) => {\n        assert(result.size === size)\n        Del.sync([dir], { force: true })\n      })\n      .catch((err) => {\n        console.error(err)\n        assert()\n        Del.sync([dir], { force: true })\n      })\n  })\n\n  describe('filterSizes', () => {\n    const filterSizes = Module.__get__('filterSizes')\n\n    it('Filter', () => {\n      const actual = filterSizes(GetRequiredICNSImageSizes(), [16, 18, 32, 64])\n      const expected = [16, 32, 64]\n      assert.deepStrictEqual(actual, expected)\n    })\n\n    it('No filter', () => {\n      const actual = filterSizes(GetRequiredICNSImageSizes())\n      const expected = [16, 32, 64, 128, 256, 512, 1024]\n      assert.deepStrictEqual(actual, expected)\n    })\n  })\n})\n",
    "static": true,
    "longname": "/Users/akabeko/Documents/dev/node/icon-gen/src/lib/png-generator.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 192,
    "kind": "test",
    "name": "describe42",
    "testId": 42,
    "memberof": "src/lib/png-generator.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "src/lib/png-generator.test.js~describe42",
    "access": null,
    "description": "PNGGenerator",
    "lineNumber": 13,
    "testTargets": [
      "PNGGenerator"
    ]
  },
  {
    "__docId__": 193,
    "kind": "test",
    "name": "describe43",
    "testId": 43,
    "memberof": "src/lib/png-generator.test.js~describe42",
    "testDepth": 1,
    "static": true,
    "longname": "src/lib/png-generator.test.js~describe42.describe43",
    "access": null,
    "description": "GetRequiredPNGImageSizes",
    "lineNumber": 17,
    "testTargets": [
      "GetRequiredPNGImageSizes"
    ]
  },
  {
    "__docId__": 194,
    "kind": "test",
    "name": "it44",
    "testId": 44,
    "memberof": "src/lib/png-generator.test.js~describe42.describe43",
    "testDepth": 2,
    "static": true,
    "longname": "src/lib/png-generator.test.js~describe42.describe43.it44",
    "access": null,
    "description": "All",
    "lineNumber": 18
  },
  {
    "__docId__": 195,
    "kind": "test",
    "name": "it45",
    "testId": 45,
    "memberof": "src/lib/png-generator.test.js~describe42.describe43",
    "testDepth": 2,
    "static": true,
    "longname": "src/lib/png-generator.test.js~describe42.describe43.it45",
    "access": null,
    "description": "All with filter",
    "lineNumber": 24
  },
  {
    "__docId__": 196,
    "kind": "test",
    "name": "it46",
    "testId": 46,
    "memberof": "src/lib/png-generator.test.js~describe42.describe43",
    "testDepth": 2,
    "static": true,
    "longname": "src/lib/png-generator.test.js~describe42.describe43.it46",
    "access": null,
    "description": "ICO",
    "lineNumber": 30
  },
  {
    "__docId__": 197,
    "kind": "test",
    "name": "it47",
    "testId": 47,
    "memberof": "src/lib/png-generator.test.js~describe42.describe43",
    "testDepth": 2,
    "static": true,
    "longname": "src/lib/png-generator.test.js~describe42.describe43.it47",
    "access": null,
    "description": "ICO with filter",
    "lineNumber": 36
  },
  {
    "__docId__": 198,
    "kind": "test",
    "name": "it48",
    "testId": 48,
    "memberof": "src/lib/png-generator.test.js~describe42.describe43",
    "testDepth": 2,
    "static": true,
    "longname": "src/lib/png-generator.test.js~describe42.describe43.it48",
    "access": null,
    "description": "ICNS",
    "lineNumber": 42
  },
  {
    "__docId__": 199,
    "kind": "test",
    "name": "it49",
    "testId": 49,
    "memberof": "src/lib/png-generator.test.js~describe42.describe43",
    "testDepth": 2,
    "static": true,
    "longname": "src/lib/png-generator.test.js~describe42.describe43.it49",
    "access": null,
    "description": "ICNS with filter",
    "lineNumber": 48
  },
  {
    "__docId__": 200,
    "kind": "test",
    "name": "it50",
    "testId": 50,
    "memberof": "src/lib/png-generator.test.js~describe42.describe43",
    "testDepth": 2,
    "static": true,
    "longname": "src/lib/png-generator.test.js~describe42.describe43.it50",
    "access": null,
    "description": "Favicon",
    "lineNumber": 54
  },
  {
    "__docId__": 201,
    "kind": "test",
    "name": "it51",
    "testId": 51,
    "memberof": "src/lib/png-generator.test.js~describe42",
    "testDepth": 1,
    "static": true,
    "longname": "src/lib/png-generator.test.js~describe42.it51",
    "access": null,
    "description": "generetePNG",
    "lineNumber": 62,
    "testTargets": [
      "generatePNG"
    ]
  },
  {
    "__docId__": 202,
    "kind": "test",
    "name": "describe52",
    "testId": 52,
    "memberof": "src/lib/png-generator.test.js~describe42",
    "testDepth": 1,
    "static": true,
    "longname": "src/lib/png-generator.test.js~describe42.describe52",
    "access": null,
    "description": "filterSizes",
    "lineNumber": 83
  },
  {
    "__docId__": 203,
    "kind": "test",
    "name": "it53",
    "testId": 53,
    "memberof": "src/lib/png-generator.test.js~describe42.describe52",
    "testDepth": 2,
    "static": true,
    "longname": "src/lib/png-generator.test.js~describe42.describe52.it53",
    "access": null,
    "description": "Filter",
    "lineNumber": 86
  },
  {
    "__docId__": 204,
    "kind": "test",
    "name": "it54",
    "testId": 54,
    "memberof": "src/lib/png-generator.test.js~describe42.describe52",
    "testDepth": 2,
    "static": true,
    "longname": "src/lib/png-generator.test.js~describe42.describe52.it54",
    "access": null,
    "description": "No filter",
    "lineNumber": 92
  },
  {
    "__docId__": 205,
    "kind": "testFile",
    "name": "src/lib/rle.test.js",
    "content": "import assert from 'assert'\nimport { PackBits, PackICNS, UnpackBits } from './rle.js'\nimport Rewire from 'rewire'\n\n/** @test {RLE} */\ndescribe('RLE', () => {\n  const Module = Rewire('./rle.js')\n\n  /** @test {RLE#packBits} */\n  describe('packBits', () => {\n    it('Normaly', () => {\n      // Sample data : https://en.wikipedia.org/wiki/PackBits\n      const src = [\n        0xaa,\n        0xaa,\n        0xaa,\n        0x80,\n        0x00,\n        0x2a,\n        0xaa,\n        0xaa,\n        0xaa,\n        0xaa,\n        0x80,\n        0x00,\n        0x2a,\n        0x22,\n        0xaa,\n        0xaa,\n        0xaa,\n        0xaa,\n        0xaa,\n        0xaa,\n        0xaa,\n        0xaa,\n        0xaa,\n        0xaa\n      ]\n      const expected = [0xfe, 0xaa, 0x02, 0x80, 0x00, 0x2a, 0xfd, 0xaa, 0x03, 0x80, 0x00, 0x2a, 0x22, 0xf7, 0xaa]\n      const actual = PackBits(src)\n      assert.deepStrictEqual(actual, expected)\n    })\n  })\n\n  /** @test {PackICNS} */\n  describe('PackICNS', () => {\n    it('Normaly', () => {\n      const src = [0, 0, 0, 249, 250, 128, 100, 101]\n      const actual = PackICNS(src)\n      const expected = [128, 0, 4, 249, 250, 128, 100, 101]\n      assert.deepStrictEqual(actual, expected)\n    })\n  })\n\n  /** @test {UnpackBits} */\n  describe('UnpackBits', () => {\n    it('Normaly', () => {\n      // Sample data : https://en.wikipedia.org/wiki/PackBits\n      const src = [0xfe, 0xaa, 0x02, 0x80, 0x00, 0x2a, 0xfd, 0xaa, 0x03, 0x80, 0x00, 0x2a, 0x22, 0xf7, 0xaa]\n      const expected = [\n        0xaa,\n        0xaa,\n        0xaa,\n        0x80,\n        0x00,\n        0x2a,\n        0xaa,\n        0xaa,\n        0xaa,\n        0xaa,\n        0x80,\n        0x00,\n        0x2a,\n        0x22,\n        0xaa,\n        0xaa,\n        0xaa,\n        0xaa,\n        0xaa,\n        0xaa,\n        0xaa,\n        0xaa,\n        0xaa,\n        0xaa\n      ]\n      const actual = UnpackBits(src)\n      assert.deepStrictEqual(actual, expected)\n    })\n  })\n  /** @test {packBitsLiteralToResult} */\n  describe('packBitsLiteralToResult', () => {\n    const packBitsLiteralToResult = Module.__get__('packBitsLiteralToResult')\n\n    it('Normaly', () => {\n      assert.deepStrictEqual(packBitsLiteralToResult([7, 1, 5, 8]), [3, 7, 1, 5, 8])\n    })\n\n    it('Empty', () => {\n      assert.deepStrictEqual(packBitsLiteralToResult([]), [])\n    })\n  })\n\n  /** @test {toUInt8} */\n  describe('toUInt8', () => {\n    const toUInt8 = Module.__get__('toUInt8')\n\n    it('Normaly', () => {\n      assert(toUInt8(-1) === 255)\n      assert(toUInt8(71) === 71)\n      assert(toUInt8(0xaa) === 0xaa)\n    })\n\n    it('Out of range', () => {\n      assert(toUInt8(-180) === 76)\n      assert(toUInt8(571) === 59)\n    })\n  })\n\n  /** @test {toInt8} */\n  describe('toInt8', () => {\n    const toInt8 = Module.__get__('toInt8')\n    it('Normaly', () => {\n      assert(toInt8(241) === -15)\n      assert(toInt8(83) === 83)\n    })\n\n    it('Out of range', () => {\n      assert(toInt8(-129) === 127)\n      assert(toInt8(195) === -61)\n      assert(toInt8(571) === 59)\n    })\n  })\n})\n",
    "static": true,
    "longname": "/Users/akabeko/Documents/dev/node/icon-gen/src/lib/rle.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 206,
    "kind": "test",
    "name": "describe55",
    "testId": 55,
    "memberof": "src/lib/rle.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "src/lib/rle.test.js~describe55",
    "access": null,
    "description": "RLE",
    "lineNumber": 6,
    "testTargets": [
      "RLE"
    ]
  },
  {
    "__docId__": 207,
    "kind": "test",
    "name": "describe56",
    "testId": 56,
    "memberof": "src/lib/rle.test.js~describe55",
    "testDepth": 1,
    "static": true,
    "longname": "src/lib/rle.test.js~describe55.describe56",
    "access": null,
    "description": "packBits",
    "lineNumber": 10,
    "testTargets": [
      "RLE#packBits"
    ]
  },
  {
    "__docId__": 208,
    "kind": "test",
    "name": "it57",
    "testId": 57,
    "memberof": "src/lib/rle.test.js~describe55.describe56",
    "testDepth": 2,
    "static": true,
    "longname": "src/lib/rle.test.js~describe55.describe56.it57",
    "access": null,
    "description": "Normaly",
    "lineNumber": 11
  },
  {
    "__docId__": 209,
    "kind": "test",
    "name": "describe58",
    "testId": 58,
    "memberof": "src/lib/rle.test.js~describe55",
    "testDepth": 1,
    "static": true,
    "longname": "src/lib/rle.test.js~describe55.describe58",
    "access": null,
    "description": "PackICNS",
    "lineNumber": 46,
    "testTargets": [
      "PackICNS"
    ]
  },
  {
    "__docId__": 210,
    "kind": "test",
    "name": "it59",
    "testId": 59,
    "memberof": "src/lib/rle.test.js~describe55.describe58",
    "testDepth": 2,
    "static": true,
    "longname": "src/lib/rle.test.js~describe55.describe58.it59",
    "access": null,
    "description": "Normaly",
    "lineNumber": 47
  },
  {
    "__docId__": 211,
    "kind": "test",
    "name": "describe60",
    "testId": 60,
    "memberof": "src/lib/rle.test.js~describe55",
    "testDepth": 1,
    "static": true,
    "longname": "src/lib/rle.test.js~describe55.describe60",
    "access": null,
    "description": "UnpackBits",
    "lineNumber": 56,
    "testTargets": [
      "UnpackBits"
    ]
  },
  {
    "__docId__": 212,
    "kind": "test",
    "name": "it61",
    "testId": 61,
    "memberof": "src/lib/rle.test.js~describe55.describe60",
    "testDepth": 2,
    "static": true,
    "longname": "src/lib/rle.test.js~describe55.describe60.it61",
    "access": null,
    "description": "Normaly",
    "lineNumber": 57
  },
  {
    "__docId__": 213,
    "kind": "test",
    "name": "describe62",
    "testId": 62,
    "memberof": "src/lib/rle.test.js~describe55",
    "testDepth": 1,
    "static": true,
    "longname": "src/lib/rle.test.js~describe55.describe62",
    "access": null,
    "description": "packBitsLiteralToResult",
    "lineNumber": 91,
    "testTargets": [
      "packBitsLiteralToResult"
    ]
  },
  {
    "__docId__": 214,
    "kind": "test",
    "name": "it63",
    "testId": 63,
    "memberof": "src/lib/rle.test.js~describe55.describe62",
    "testDepth": 2,
    "static": true,
    "longname": "src/lib/rle.test.js~describe55.describe62.it63",
    "access": null,
    "description": "Normaly",
    "lineNumber": 94
  },
  {
    "__docId__": 215,
    "kind": "test",
    "name": "it64",
    "testId": 64,
    "memberof": "src/lib/rle.test.js~describe55.describe62",
    "testDepth": 2,
    "static": true,
    "longname": "src/lib/rle.test.js~describe55.describe62.it64",
    "access": null,
    "description": "Empty",
    "lineNumber": 98
  },
  {
    "__docId__": 216,
    "kind": "test",
    "name": "describe65",
    "testId": 65,
    "memberof": "src/lib/rle.test.js~describe55",
    "testDepth": 1,
    "static": true,
    "longname": "src/lib/rle.test.js~describe55.describe65",
    "access": null,
    "description": "toUInt8",
    "lineNumber": 104,
    "testTargets": [
      "toUInt8"
    ]
  },
  {
    "__docId__": 217,
    "kind": "test",
    "name": "it66",
    "testId": 66,
    "memberof": "src/lib/rle.test.js~describe55.describe65",
    "testDepth": 2,
    "static": true,
    "longname": "src/lib/rle.test.js~describe55.describe65.it66",
    "access": null,
    "description": "Normaly",
    "lineNumber": 107
  },
  {
    "__docId__": 218,
    "kind": "test",
    "name": "it67",
    "testId": 67,
    "memberof": "src/lib/rle.test.js~describe55.describe65",
    "testDepth": 2,
    "static": true,
    "longname": "src/lib/rle.test.js~describe55.describe65.it67",
    "access": null,
    "description": "Out of range",
    "lineNumber": 113
  },
  {
    "__docId__": 219,
    "kind": "test",
    "name": "describe68",
    "testId": 68,
    "memberof": "src/lib/rle.test.js~describe55",
    "testDepth": 1,
    "static": true,
    "longname": "src/lib/rle.test.js~describe55.describe68",
    "access": null,
    "description": "toInt8",
    "lineNumber": 120,
    "testTargets": [
      "toInt8"
    ]
  },
  {
    "__docId__": 220,
    "kind": "test",
    "name": "it69",
    "testId": 69,
    "memberof": "src/lib/rle.test.js~describe55.describe68",
    "testDepth": 2,
    "static": true,
    "longname": "src/lib/rle.test.js~describe55.describe68.it69",
    "access": null,
    "description": "Normaly",
    "lineNumber": 122
  },
  {
    "__docId__": 221,
    "kind": "test",
    "name": "it70",
    "testId": 70,
    "memberof": "src/lib/rle.test.js~describe55.describe68",
    "testDepth": 2,
    "static": true,
    "longname": "src/lib/rle.test.js~describe55.describe68.it70",
    "access": null,
    "description": "Out of range",
    "lineNumber": 127
  },
  {
    "__docId__": 222,
    "kind": "testFile",
    "name": "src/lib/util.test.js",
    "content": "import assert from 'assert'\nimport Del from 'del'\nimport { GetRequiredPNGImageSizes } from './png-generator.js'\nimport { GetRequiredFavoriteImageSizes } from './favicon-generator.js'\nimport { GetRequiredICNSImageSizes } from './icns-generator.js'\nimport { GetRequiredICOImageSizes } from './ico-generator.js'\nimport Util from './util.js'\n\n/** @test {Util} */\ndescribe('Util', () => {\n  /** @test {Util#createWorkDir} */\n  it('createWorkDir', () => {\n    const dir = Util.createWorkDir()\n    assert(dir)\n\n    Del.sync([dir], { force: true })\n  })\n\n  /** @test {Util#filterImagesBySizes} */\n  it('filterImagesBySizes', () => {\n    const targets = GetRequiredPNGImageSizes().map((size) => {\n      return { size: size }\n    })\n\n    let actual = GetRequiredICOImageSizes()\n    let expected = Util.filterImagesBySizes(targets, actual)\n    assert(expected.length === actual.length)\n\n    actual = GetRequiredICNSImageSizes()\n    expected = Util.filterImagesBySizes(targets, actual)\n    assert(expected.length === actual.length)\n\n    actual = GetRequiredFavoriteImageSizes()\n    expected = Util.filterImagesBySizes(targets, actual)\n    assert(expected.length === actual.length)\n  })\n\n  /** @test {Util#flattenValues} */\n  it('flattenValues', () => {\n    const values = ['A', 'B', ['C', 'D']]\n    const actual = ['A', 'B', 'C', 'D']\n    const expected = Util.flattenValues(values)\n\n    assert.deepStrictEqual(expected, actual)\n  })\n})\n",
    "static": true,
    "longname": "/Users/akabeko/Documents/dev/node/icon-gen/src/lib/util.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 223,
    "kind": "test",
    "name": "describe71",
    "testId": 71,
    "memberof": "src/lib/util.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "src/lib/util.test.js~describe71",
    "access": null,
    "description": "Util",
    "lineNumber": 10,
    "testTargets": [
      "Util"
    ]
  },
  {
    "__docId__": 224,
    "kind": "test",
    "name": "it72",
    "testId": 72,
    "memberof": "src/lib/util.test.js~describe71",
    "testDepth": 1,
    "static": true,
    "longname": "src/lib/util.test.js~describe71.it72",
    "access": null,
    "description": "createWorkDir",
    "lineNumber": 12,
    "testTargets": [
      "Util#createWorkDir"
    ]
  },
  {
    "__docId__": 225,
    "kind": "test",
    "name": "it73",
    "testId": 73,
    "memberof": "src/lib/util.test.js~describe71",
    "testDepth": 1,
    "static": true,
    "longname": "src/lib/util.test.js~describe71.it73",
    "access": null,
    "description": "filterImagesBySizes",
    "lineNumber": 20,
    "testTargets": [
      "Util#filterImagesBySizes"
    ]
  },
  {
    "__docId__": 226,
    "kind": "test",
    "name": "it74",
    "testId": 74,
    "memberof": "src/lib/util.test.js~describe71",
    "testDepth": 1,
    "static": true,
    "longname": "src/lib/util.test.js~describe71.it74",
    "access": null,
    "description": "flattenValues",
    "lineNumber": 39,
    "testTargets": [
      "Util#flattenValues"
    ]
  }
]